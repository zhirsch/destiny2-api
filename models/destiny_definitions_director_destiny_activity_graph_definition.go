// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDirectorDestinyActivityGraphDefinition Represents a Map View in the director: be them overview views, destination views, or other.
// They have nodes which map to activities, and other various visual elements that we (or others) may or may not be able to use.
// Activity graphs, most importantly, have nodes which can have activities in various states of playability.
// Unfortunately, activity graphs are combined at runtime with Game UI-only assets such as fragments of map images, various in-game special effects, decals etc... that we don't get in these definitions.
// If we end up having time, we may end up trying to manually populate those here: but the last time we tried that, before the lead-up to D1, it proved to be unmaintainable as the game's content changed. So don't bet the farm on us providing that content in this definition.
// swagger:model Destiny.Definitions.Director.DestinyActivityGraphDefinition

type DestinyDefinitionsDirectorDestinyActivityGraphDefinition struct {

	// art elements
	ArtElements DestinyDefinitionsDirectorDestinyActivityGraphDefinitionArtElements `json:"artElements"`

	// connections
	Connections DestinyDefinitionsDirectorDestinyActivityGraphDefinitionConnections `json:"connections"`

	// display objectives
	DisplayObjectives DestinyDefinitionsDirectorDestinyActivityGraphDefinitionDisplayObjectives `json:"displayObjectives"`

	// display progressions
	DisplayProgressions DestinyDefinitionsDirectorDestinyActivityGraphDefinitionDisplayProgressions `json:"displayProgressions"`

	// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
	// When entities refer to each other in Destiny content, it is this hash that they are referring to.
	Hash uint32 `json:"hash,omitempty"`

	// The index of the entity as it was found in the investment tables.
	Index int32 `json:"index,omitempty"`

	// linked graphs
	LinkedGraphs DestinyDefinitionsDirectorDestinyActivityGraphDefinitionLinkedGraphs `json:"linkedGraphs"`

	// nodes
	Nodes DestinyDefinitionsDirectorDestinyActivityGraphDefinitionNodes `json:"nodes"`

	// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
	Redacted bool `json:"redacted,omitempty"`
}

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition artElements false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition connections false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition displayObjectives false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition displayProgressions false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition hash false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition index false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition linkedGraphs false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition nodes false */

/* polymorph Destiny.Definitions.Director.DestinyActivityGraphDefinition redacted false */

// Validate validates this destiny definitions director destiny activity graph definition
func (m *DestinyDefinitionsDirectorDestinyActivityGraphDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDirectorDestinyActivityGraphDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDirectorDestinyActivityGraphDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDirectorDestinyActivityGraphDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
