// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyMilestonesDestinyMilestoneContentItemCategory Part of our dynamic, localized Milestone content is arbitrary categories of items. These are built in our content management system, and thus aren't the same as programmatically generated rewards.
// swagger:model Destiny.Milestones.DestinyMilestoneContentItemCategory

type DestinyMilestonesDestinyMilestoneContentItemCategory struct {

	// item hashes
	ItemHashes []uint32 `json:"itemHashes"`

	// title
	Title string `json:"title,omitempty"`
}

/* polymorph Destiny.Milestones.DestinyMilestoneContentItemCategory itemHashes false */

/* polymorph Destiny.Milestones.DestinyMilestoneContentItemCategory title false */

// Validate validates this destiny milestones destiny milestone content item category
func (m *DestinyMilestonesDestinyMilestoneContentItemCategory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItemHashes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyMilestonesDestinyMilestoneContentItemCategory) validateItemHashes(formats strfmt.Registry) error {

	if swag.IsZero(m.ItemHashes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneContentItemCategory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneContentItemCategory) UnmarshalBinary(b []byte) error {
	var res DestinyMilestonesDestinyMilestoneContentItemCategory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
