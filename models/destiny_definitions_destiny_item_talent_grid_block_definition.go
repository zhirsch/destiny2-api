// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemTalentGridBlockDefinition This defines information that can only come from a talent grid on an item. Items mostly have negligible talent grid data these days, but instanced items still retain grids as a source for some of this common information.
// Builds/Subclasses are the only items left that still have talent grids with meaningful Nodes.
// swagger:model Destiny.Definitions.DestinyItemTalentGridBlockDefinition

type DestinyDefinitionsDestinyItemTalentGridBlockDefinition struct {

	// A shortcut string identifier for the "build" in question, if this talent grid has an associated build. Doesn't map to anything we can expose at the moment.
	BuildName string `json:"buildName,omitempty"`

	// If the talent grid implies a damage type, this is the enum value for that damage type.
	HudDamageType DestinyDamageType `json:"hudDamageType,omitempty"`

	// If the talent grid has a special icon that's shown in the game UI (like builds, funny that), this is the identifier for that icon. Sadly, we don't actually get that icon right now. I'll be looking to replace this with a path to the actual icon itself.
	HudIcon string `json:"hudIcon,omitempty"`

	// This is meant to be a subtitle for looking at the talent grid. In practice, somewhat frustratingly, this always merely says the localized word for "Details". Great. Maybe it'll have more if talent grids ever get used for more than builds and subclasses again.
	ItemDetailString string `json:"itemDetailString,omitempty"`

	// The hash identifier of the DestinyTalentGridDefinition attached to this item.
	TalentGridHash uint32 `json:"talentGridHash,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemTalentGridBlockDefinition buildName false */

/* polymorph Destiny.Definitions.DestinyItemTalentGridBlockDefinition hudDamageType false */

/* polymorph Destiny.Definitions.DestinyItemTalentGridBlockDefinition hudIcon false */

/* polymorph Destiny.Definitions.DestinyItemTalentGridBlockDefinition itemDetailString false */

/* polymorph Destiny.Definitions.DestinyItemTalentGridBlockDefinition talentGridHash false */

// Validate validates this destiny definitions destiny item talent grid block definition
func (m *DestinyDefinitionsDestinyItemTalentGridBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHudDamageType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyItemTalentGridBlockDefinition) validateHudDamageType(formats strfmt.Registry) error {

	if swag.IsZero(m.HudDamageType) { // not required
		return nil
	}

	if err := m.HudDamageType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("hudDamageType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemTalentGridBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemTalentGridBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemTalentGridBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
