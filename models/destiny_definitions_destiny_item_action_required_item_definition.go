// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemActionRequiredItemDefinition The definition of an item and quantity required in a character's inventory in order to perform an action.
// swagger:model Destiny.Definitions.DestinyItemActionRequiredItemDefinition

type DestinyDefinitionsDestinyItemActionRequiredItemDefinition struct {

	// The minimum quantity of the item you have to have.
	Count int32 `json:"count,omitempty"`

	// If true, the item/quantity will be deleted from your inventory when the action is performed. Otherwise, you'll retain these required items after the action is complete.
	DeleteOnAction bool `json:"deleteOnAction,omitempty"`

	// The hash identifier of the item you need to have. Use it to look up the DestinyInventoryItemDefinition for more info.
	ItemHash uint32 `json:"itemHash,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemActionRequiredItemDefinition count false */

/* polymorph Destiny.Definitions.DestinyItemActionRequiredItemDefinition deleteOnAction false */

/* polymorph Destiny.Definitions.DestinyItemActionRequiredItemDefinition itemHash false */

// Validate validates this destiny definitions destiny item action required item definition
func (m *DestinyDefinitionsDestinyItemActionRequiredItemDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemActionRequiredItemDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemActionRequiredItemDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemActionRequiredItemDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
