// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition Defines a plug "Category" that is allowed to be plugged into a socket of this type.
// This should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash, which indicates the plug item's category.
// swagger:model Destiny.Definitions.Sockets.DestinyPlugWhitelistEntryDefinition

type DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition struct {

	// The hash identifier of the Plug Category to compare against the plug item's plug.plugCategoryHash.
	// Note that this does NOT relate to any Definition in itself, it is only used for comparison purposes.
	CategoryHash uint32 `json:"categoryHash,omitempty"`

	// The string identifier for the category, which is here mostly for debug purposes.
	CategoryIdentifier string `json:"categoryIdentifier,omitempty"`
}

/* polymorph Destiny.Definitions.Sockets.DestinyPlugWhitelistEntryDefinition categoryHash false */

/* polymorph Destiny.Definitions.Sockets.DestinyPlugWhitelistEntryDefinition categoryIdentifier false */

// Validate validates this destiny definitions sockets destiny plug whitelist entry definition
func (m *DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
