// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemValueBlockDefinition This defines an item's "Value". Unfortunately, this appears to be used in different ways depending on the way that the item itself is used.
// For items being sold at a Vendor, this is the default "sale price" of the item. These days, the vendor itself almost always sets the price, but it still possible for the price to fall back to this value. For quests, it is a preview of rewards you can gain by completing the quest. For dummy items, if the itemValue refers to an Emblem, it is the emblem that should be shown as the reward. (jeez louise)
// It will likely be used in a number of other ways in the future, it appears to be a bucket where they put arbitrary items and quantities into the item.
// swagger:model Destiny.Definitions.DestinyItemValueBlockDefinition

type DestinyDefinitionsDestinyItemValueBlockDefinition struct {

	// item value
	ItemValue DestinyDefinitionsDestinyItemValueBlockDefinitionItemValue `json:"itemValue"`

	// If there's a localized text description of the value provided, this will be said description.
	ValueDescription string `json:"valueDescription,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemValueBlockDefinition itemValue false */

/* polymorph Destiny.Definitions.DestinyItemValueBlockDefinition valueDescription false */

// Validate validates this destiny definitions destiny item value block definition
func (m *DestinyDefinitionsDestinyItemValueBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemValueBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemValueBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemValueBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
