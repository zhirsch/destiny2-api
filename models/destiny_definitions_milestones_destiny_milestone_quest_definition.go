// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition Any data we need to figure out whether this Quest Item is the currently active one for the conceptual Milestone. Even just typing this description, I already regret it.
// swagger:model Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition

type DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition struct {

	// activities
	Activities DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinitionActivities `json:"activities,omitempty"`

	// The individual quests may have different definitions from the overall milestone: if there's a specific active quest, use these displayProperties instead of that of the overall DestinyMilestoneDefinition.
	DisplayProperties *DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition `json:"displayProperties,omitempty"`

	// If populated, this image can be shown instead of the generic milestone's image when this quest is live, or it can be used to show a background image for the quest itself that differs from that of the Activity or the Milestone.
	OverrideImage string `json:"overrideImage,omitempty"`

	// The item representing this Milestone quest. Use this hash to look up the DestinyInventoryItemDefinition for the quest to find its steps and human readable data.
	QuestItemHash uint32 `json:"questItemHash,omitempty"`

	// The rewards you will get for completing this quest, as best as we could extract them from our data. Sometimes, it'll be a decent amount of data. Sometimes, it's going to be sucky. Sorry.
	QuestRewards *DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition `json:"questRewards,omitempty"`
}

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition activities false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition displayProperties false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition overrideImage false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition questItemHash false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition questRewards false */

// Validate validates this destiny definitions milestones destiny milestone quest definition
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateQuestRewards(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition) validateDisplayProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.DisplayProperties) { // not required
		return nil
	}

	if m.DisplayProperties != nil {

		if err := m.DisplayProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("displayProperties")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition) validateQuestRewards(formats strfmt.Registry) error {

	if swag.IsZero(m.QuestRewards) { // not required
		return nil
	}

	if m.QuestRewards != nil {

		if err := m.QuestRewards.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("questRewards")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
