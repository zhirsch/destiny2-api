// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GroupsV2GroupEditAction groups v2 group edit action
// swagger:model GroupsV2.GroupEditAction

type GroupsV2GroupEditAction struct {

	// about
	About string `json:"about,omitempty"`

	// allow chat
	AllowChat bool `json:"allowChat,omitempty"`

	// avatar image index
	AvatarImageIndex int32 `json:"avatarImageIndex,omitempty"`

	// callsign
	Callsign string `json:"callsign,omitempty"`

	// chat security
	ChatSecurity int32 `json:"chatSecurity,omitempty"`

	// default publicity
	DefaultPublicity int32 `json:"defaultPublicity,omitempty"`

	// enable invitation messaging for admins
	EnableInvitationMessagingForAdmins bool `json:"enableInvitationMessagingForAdmins,omitempty"`

	// homepage
	Homepage int32 `json:"homepage,omitempty"`

	// is public
	IsPublic bool `json:"isPublic,omitempty"`

	// is public topic admin only
	IsPublicTopicAdminOnly bool `json:"isPublicTopicAdminOnly,omitempty"`

	// locale
	Locale string `json:"locale,omitempty"`

	// membership option
	MembershipOption int32 `json:"membershipOption,omitempty"`

	// motto
	Motto string `json:"motto,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// tags
	Tags string `json:"tags,omitempty"`

	// theme
	Theme string `json:"theme,omitempty"`
}

/* polymorph GroupsV2.GroupEditAction about false */

/* polymorph GroupsV2.GroupEditAction allowChat false */

/* polymorph GroupsV2.GroupEditAction avatarImageIndex false */

/* polymorph GroupsV2.GroupEditAction callsign false */

/* polymorph GroupsV2.GroupEditAction chatSecurity false */

/* polymorph GroupsV2.GroupEditAction defaultPublicity false */

/* polymorph GroupsV2.GroupEditAction enableInvitationMessagingForAdmins false */

/* polymorph GroupsV2.GroupEditAction homepage false */

/* polymorph GroupsV2.GroupEditAction isPublic false */

/* polymorph GroupsV2.GroupEditAction isPublicTopicAdminOnly false */

/* polymorph GroupsV2.GroupEditAction locale false */

/* polymorph GroupsV2.GroupEditAction membershipOption false */

/* polymorph GroupsV2.GroupEditAction motto false */

/* polymorph GroupsV2.GroupEditAction name false */

/* polymorph GroupsV2.GroupEditAction tags false */

/* polymorph GroupsV2.GroupEditAction theme false */

// Validate validates this groups v2 group edit action
func (m *GroupsV2GroupEditAction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChatSecurity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDefaultPublicity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHomepage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMembershipOption(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var groupsV2GroupEditActionTypeChatSecurityPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		groupsV2GroupEditActionTypeChatSecurityPropEnum = append(groupsV2GroupEditActionTypeChatSecurityPropEnum, v)
	}
}

// prop value enum
func (m *GroupsV2GroupEditAction) validateChatSecurityEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, groupsV2GroupEditActionTypeChatSecurityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GroupsV2GroupEditAction) validateChatSecurity(formats strfmt.Registry) error {

	if swag.IsZero(m.ChatSecurity) { // not required
		return nil
	}

	// value enum
	if err := m.validateChatSecurityEnum("chatSecurity", "body", m.ChatSecurity); err != nil {
		return err
	}

	return nil
}

var groupsV2GroupEditActionTypeDefaultPublicityPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		groupsV2GroupEditActionTypeDefaultPublicityPropEnum = append(groupsV2GroupEditActionTypeDefaultPublicityPropEnum, v)
	}
}

// prop value enum
func (m *GroupsV2GroupEditAction) validateDefaultPublicityEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, groupsV2GroupEditActionTypeDefaultPublicityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GroupsV2GroupEditAction) validateDefaultPublicity(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultPublicity) { // not required
		return nil
	}

	// value enum
	if err := m.validateDefaultPublicityEnum("defaultPublicity", "body", m.DefaultPublicity); err != nil {
		return err
	}

	return nil
}

var groupsV2GroupEditActionTypeHomepagePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		groupsV2GroupEditActionTypeHomepagePropEnum = append(groupsV2GroupEditActionTypeHomepagePropEnum, v)
	}
}

// prop value enum
func (m *GroupsV2GroupEditAction) validateHomepageEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, groupsV2GroupEditActionTypeHomepagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GroupsV2GroupEditAction) validateHomepage(formats strfmt.Registry) error {

	if swag.IsZero(m.Homepage) { // not required
		return nil
	}

	// value enum
	if err := m.validateHomepageEnum("homepage", "body", m.Homepage); err != nil {
		return err
	}

	return nil
}

var groupsV2GroupEditActionTypeMembershipOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		groupsV2GroupEditActionTypeMembershipOptionPropEnum = append(groupsV2GroupEditActionTypeMembershipOptionPropEnum, v)
	}
}

// prop value enum
func (m *GroupsV2GroupEditAction) validateMembershipOptionEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, groupsV2GroupEditActionTypeMembershipOptionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GroupsV2GroupEditAction) validateMembershipOption(formats strfmt.Registry) error {

	if swag.IsZero(m.MembershipOption) { // not required
		return nil
	}

	// value enum
	if err := m.validateMembershipOptionEnum("membershipOption", "body", m.MembershipOption); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupsV2GroupEditAction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupsV2GroupEditAction) UnmarshalBinary(b []byte) error {
	var res GroupsV2GroupEditAction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
