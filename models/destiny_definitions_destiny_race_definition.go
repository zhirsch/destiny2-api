// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyRaceDefinition In Destiny, "Races" are really more like "Species". Sort of. I mean, are the Awoken a separate species from humans? I'm not sure. But either way, they're defined here. You'll see Exo, Awoken, and Human as examples of these Species. Players will choose one for their character.
// swagger:model Destiny.Definitions.DestinyRaceDefinition

type DestinyDefinitionsDestinyRaceDefinition struct {

	// display properties
	DisplayProperties *DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition `json:"displayProperties,omitempty"`

	// A localized string referring to the singular form of the Race's name when referred to in gendered form. Keyed by the DestinyGender.
	GenderedRaceNames map[string]string `json:"genderedRaceNames,omitempty"`

	// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
	// When entities refer to each other in Destiny content, it is this hash that they are referring to.
	Hash uint32 `json:"hash,omitempty"`

	// The index of the entity as it was found in the investment tables.
	Index int32 `json:"index,omitempty"`

	// An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.
	RaceType DestinyDestinyRace `json:"raceType,omitempty"`

	// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
	Redacted bool `json:"redacted,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyRaceDefinition displayProperties false */

/* polymorph Destiny.Definitions.DestinyRaceDefinition genderedRaceNames false */

/* polymorph Destiny.Definitions.DestinyRaceDefinition hash false */

/* polymorph Destiny.Definitions.DestinyRaceDefinition index false */

/* polymorph Destiny.Definitions.DestinyRaceDefinition raceType false */

/* polymorph Destiny.Definitions.DestinyRaceDefinition redacted false */

// Validate validates this destiny definitions destiny race definition
func (m *DestinyDefinitionsDestinyRaceDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRaceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyRaceDefinition) validateDisplayProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.DisplayProperties) { // not required
		return nil
	}

	if m.DisplayProperties != nil {

		if err := m.DisplayProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("displayProperties")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyDefinitionsDestinyRaceDefinition) validateRaceType(formats strfmt.Registry) error {

	if swag.IsZero(m.RaceType) { // not required
		return nil
	}

	if err := m.RaceType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("raceType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyRaceDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyRaceDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyRaceDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
