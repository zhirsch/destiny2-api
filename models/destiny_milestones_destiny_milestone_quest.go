// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyMilestonesDestinyMilestoneQuest If a Milestone has one or more Quests, this will contain the live information for the character's status with one of those quests.
// swagger:model Destiny.Milestones.DestinyMilestoneQuest

type DestinyMilestonesDestinyMilestoneQuest struct {

	// *IF* the Milestone has an active Activity that can give you greater details about what you need to do, it will be returned here. Remember to associate this with the DestinyMilestoneDefinition's activities to get details about the activity, including what specific quest it is related to if you have multiple quests to choose from.
	Activity *DestinyMilestonesDestinyMilestoneActivity `json:"activity,omitempty"`

	// challenges
	Challenges DestinyMilestonesDestinyMilestoneQuestChallenges `json:"challenges"`

	// Quests are defined as Items in content. As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest. It will have pointers to all of the steps in the quest, and display information for the quest (title, description, icon etc) Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setData property, and themselves are Items with their own renderable data.
	QuestItemHash uint32 `json:"questItemHash,omitempty"`

	// The current status of the quest for the character making the request.
	Status *DestinyQuestsDestinyQuestStatus `json:"status,omitempty"`
}

/* polymorph Destiny.Milestones.DestinyMilestoneQuest activity false */

/* polymorph Destiny.Milestones.DestinyMilestoneQuest challenges false */

/* polymorph Destiny.Milestones.DestinyMilestoneQuest questItemHash false */

/* polymorph Destiny.Milestones.DestinyMilestoneQuest status false */

// Validate validates this destiny milestones destiny milestone quest
func (m *DestinyMilestonesDestinyMilestoneQuest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActivity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyMilestonesDestinyMilestoneQuest) validateActivity(formats strfmt.Registry) error {

	if swag.IsZero(m.Activity) { // not required
		return nil
	}

	if m.Activity != nil {

		if err := m.Activity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("activity")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyMilestonesDestinyMilestoneQuest) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if m.Status != nil {

		if err := m.Status.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneQuest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneQuest) UnmarshalBinary(b []byte) error {
	var res DestinyMilestonesDestinyMilestoneQuest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
