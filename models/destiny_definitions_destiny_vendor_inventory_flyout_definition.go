// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition The definition for an "inventory flyout": a UI screen where we show you part of an otherwise hidden vendor inventory: like the Vault inventory buckets.
// swagger:model Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition

type DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition struct {

	// buckets
	Buckets DestinyDefinitionsDestinyVendorInventoryFlyoutDefinitionBuckets `json:"buckets"`

	// The title and other common properties of the flyout.
	DisplayProperties *DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition `json:"displayProperties,omitempty"`

	// An identifier for the flyout, in case anything else needs to refer to them.
	FlyoutID uint32 `json:"flyoutId,omitempty"`

	// If the flyout is locked, this is the reason why.
	LockedDescription string `json:"lockedDescription,omitempty"`

	// If this is true, don't show any of the glistening "this is a new item" UI elements, like we show on the inventory items themselves in in-game UI.
	SuppressNewness bool `json:"suppressNewness,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition buckets false */

/* polymorph Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition displayProperties false */

/* polymorph Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition flyoutId false */

/* polymorph Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition lockedDescription false */

/* polymorph Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition suppressNewness false */

// Validate validates this destiny definitions destiny vendor inventory flyout definition
func (m *DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition) validateDisplayProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.DisplayProperties) { // not required
		return nil
	}

	if m.DisplayProperties != nil {

		if err := m.DisplayProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("displayProperties")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
