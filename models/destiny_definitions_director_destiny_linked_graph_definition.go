// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDirectorDestinyLinkedGraphDefinition This describes links between the current graph and others, as well as when that link is relevant.
// swagger:model Destiny.Definitions.Director.DestinyLinkedGraphDefinition

type DestinyDefinitionsDirectorDestinyLinkedGraphDefinition struct {

	// description
	Description string `json:"description,omitempty"`

	// linked graph Id
	LinkedGraphID uint32 `json:"linkedGraphId,omitempty"`

	// linked graphs
	LinkedGraphs DestinyDefinitionsDirectorDestinyLinkedGraphDefinitionLinkedGraphs `json:"linkedGraphs"`

	// name
	Name string `json:"name,omitempty"`

	// overview
	Overview string `json:"overview,omitempty"`

	// unlock expression
	UnlockExpression *DestinyDefinitionsDestinyUnlockExpressionDefinition `json:"unlockExpression,omitempty"`
}

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition description false */

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition linkedGraphId false */

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition linkedGraphs false */

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition name false */

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition overview false */

/* polymorph Destiny.Definitions.Director.DestinyLinkedGraphDefinition unlockExpression false */

// Validate validates this destiny definitions director destiny linked graph definition
func (m *DestinyDefinitionsDirectorDestinyLinkedGraphDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnlockExpression(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDirectorDestinyLinkedGraphDefinition) validateUnlockExpression(formats strfmt.Registry) error {

	if swag.IsZero(m.UnlockExpression) { // not required
		return nil
	}

	if m.UnlockExpression != nil {

		if err := m.UnlockExpression.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("unlockExpression")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDirectorDestinyLinkedGraphDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDirectorDestinyLinkedGraphDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDirectorDestinyLinkedGraphDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
