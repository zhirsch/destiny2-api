// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyStatGroupDefinition When an inventory item (DestinyInventoryItemDefinition) has Stats (such as Attack Power), the item will refer to a Stat Group. This definition enumerates the properties used to transform the item's "Investment" stats into "Display" stats.
// See DestinyStatDefinition's documentation for information about the transformation of Stats, and the meaning of an Investment vs. a Display stat.
// If you don't want to do these calculations on your own, fear not: pulling live data from the BNet endpoints will return display stat values pre-computed and ready for you to use. I highly recommend this approach, saves a lot of time and also accounts for certain stat modifiers that can't easily be accounted for without live data (such as stat modifiers on Talent Grids and Socket Plugs)
// swagger:model Destiny.Definitions.DestinyStatGroupDefinition

type DestinyDefinitionsDestinyStatGroupDefinition struct {

	// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
	// When entities refer to each other in Destiny content, it is this hash that they are referring to.
	Hash uint32 `json:"hash,omitempty"`

	// The index of the entity as it was found in the investment tables.
	Index int32 `json:"index,omitempty"`

	// The maximum possible value that any stat in this group can be transformed into.
	// This is used by stats that *don't* have scaledStats entries below, but that still need to be displayed as a progress bar, in which case this is used as the upper bound for said progress bar. (the lower bound is always 0)
	MaximumValue int32 `json:"maximumValue,omitempty"`

	// overrides
	Overrides DestinyDefinitionsDestinyStatGroupDefinitionOverrides `json:"overrides,omitempty"`

	// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
	Redacted bool `json:"redacted,omitempty"`

	// scaled stats
	ScaledStats DestinyDefinitionsDestinyStatGroupDefinitionScaledStats `json:"scaledStats"`

	// This apparently indicates the position of the stats in the UI? I've returned it in case anyone can use it, but it's not of any use to us on BNet. Something's being lost in translation with this value.
	UIPosition int32 `json:"uiPosition,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition hash false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition index false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition maximumValue false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition overrides false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition redacted false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition scaledStats false */

/* polymorph Destiny.Definitions.DestinyStatGroupDefinition uiPosition false */

// Validate validates this destiny definitions destiny stat group definition
func (m *DestinyDefinitionsDestinyStatGroupDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyStatGroupDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyStatGroupDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyStatGroupDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
