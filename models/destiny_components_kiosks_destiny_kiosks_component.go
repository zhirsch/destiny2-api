// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyComponentsKiosksDestinyKiosksComponent A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you have already acquired that item before.
// This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the individual character's DestinyCharacterKiosksComponent.
// Note that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor's itemList property), these results are necessarily content version dependent. Make sure that you have the latest version of the content manifest databases before using this data.
// swagger:model Destiny.Components.Kiosks.DestinyKiosksComponent

type DestinyComponentsKiosksDestinyKiosksComponent struct {

	// kiosk items
	KioskItems DestinyComponentsKiosksDestinyKiosksComponentKioskItems `json:"kioskItems,omitempty"`
}

/* polymorph Destiny.Components.Kiosks.DestinyKiosksComponent kioskItems false */

// Validate validates this destiny components kiosks destiny kiosks component
func (m *DestinyComponentsKiosksDestinyKiosksComponent) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyComponentsKiosksDestinyKiosksComponent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyComponentsKiosksDestinyKiosksComponent) UnmarshalBinary(b []byte) error {
	var res DestinyComponentsKiosksDestinyKiosksComponent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
