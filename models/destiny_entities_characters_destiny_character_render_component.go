// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyEntitiesCharactersDestinyCharacterRenderComponent Only really useful if you're attempting to render the character's current appearance in 3D, this returns a bare minimum of information, pre-aggregated, that you'll need to perform that rendering. Note that you need to combine this with other 3D assets and data from our servers.
// Examine the Javascript returned by https://bungie.net/sharedbundle/spasm to see how we use this data, but be warned: the rabbit hole goes pretty deep.
// swagger:model Destiny.Entities.Characters.DestinyCharacterRenderComponent

type DestinyEntitiesCharactersDestinyCharacterRenderComponent struct {

	// custom dyes
	CustomDyes DestinyEntitiesCharactersDestinyCharacterRenderComponentCustomDyes `json:"customDyes"`

	// This is actually something that Spasm.js *doesn't* do right now, and that we don't return assets for yet. This is the data about what character customization options you picked. You can combine this with DestinyCharacterCustomizationOptionDefinition to show some cool info, and hopefully someday to actually render a user's face in 3D. We'll see if we ever end up with time for that.
	Customization *DestinyCharacterDestinyCharacterCustomization `json:"customization,omitempty"`

	// A minimal view of:
	// - Equipped items
	// - The rendering-related custom options on those equipped items
	// Combined, that should be enough to render all of the items on the equipped character.
	PeerView *DestinyCharacterDestinyCharacterPeerView `json:"peerView,omitempty"`
}

/* polymorph Destiny.Entities.Characters.DestinyCharacterRenderComponent customDyes false */

/* polymorph Destiny.Entities.Characters.DestinyCharacterRenderComponent customization false */

/* polymorph Destiny.Entities.Characters.DestinyCharacterRenderComponent peerView false */

// Validate validates this destiny entities characters destiny character render component
func (m *DestinyEntitiesCharactersDestinyCharacterRenderComponent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomization(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePeerView(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyEntitiesCharactersDestinyCharacterRenderComponent) validateCustomization(formats strfmt.Registry) error {

	if swag.IsZero(m.Customization) { // not required
		return nil
	}

	if m.Customization != nil {

		if err := m.Customization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customization")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyEntitiesCharactersDestinyCharacterRenderComponent) validatePeerView(formats strfmt.Registry) error {

	if swag.IsZero(m.PeerView) { // not required
		return nil
	}

	if m.PeerView != nil {

		if err := m.PeerView.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("peerView")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyEntitiesCharactersDestinyCharacterRenderComponent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyEntitiesCharactersDestinyCharacterRenderComponent) UnmarshalBinary(b []byte) error {
	var res DestinyEntitiesCharactersDestinyCharacterRenderComponent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
