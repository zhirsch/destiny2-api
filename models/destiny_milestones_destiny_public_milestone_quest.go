// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyMilestonesDestinyPublicMilestoneQuest destiny milestones destiny public milestone quest
// swagger:model Destiny.Milestones.DestinyPublicMilestoneQuest

type DestinyMilestonesDestinyPublicMilestoneQuest struct {

	// A milestone need not have an active activity, but if there is one it will be returned here, along with any variant and additional information.
	Activity *DestinyMilestonesDestinyPublicMilestoneActivity `json:"activity,omitempty"`

	// challenges
	Challenges DestinyMilestonesDestinyPublicMilestoneQuestChallenges `json:"challenges"`

	// Quests are defined as Items in content. As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest. It will have pointers to all of the steps in the quest, and display information for the quest (title, description, icon etc) Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setData property, and themselves are Items with their own renderable data.
	QuestItemHash uint32 `json:"questItemHash,omitempty"`
}

/* polymorph Destiny.Milestones.DestinyPublicMilestoneQuest activity false */

/* polymorph Destiny.Milestones.DestinyPublicMilestoneQuest challenges false */

/* polymorph Destiny.Milestones.DestinyPublicMilestoneQuest questItemHash false */

// Validate validates this destiny milestones destiny public milestone quest
func (m *DestinyMilestonesDestinyPublicMilestoneQuest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActivity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyMilestonesDestinyPublicMilestoneQuest) validateActivity(formats strfmt.Registry) error {

	if swag.IsZero(m.Activity) { // not required
		return nil
	}

	if m.Activity != nil {

		if err := m.Activity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("activity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyMilestonesDestinyPublicMilestoneQuest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyMilestonesDestinyPublicMilestoneQuest) UnmarshalBinary(b []byte) error {
	var res DestinyMilestonesDestinyPublicMilestoneQuest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
