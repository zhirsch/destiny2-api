// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsSocketsDestinySocketTypeDefinitionPlugWhitelist A list of Plug "Categories" that are allowed to be plugged into sockets of this type.
// These should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash, which indicates the plug item's category.
// If the plug's category matches any whitelisted plug, or if the whitelist is empty, it is allowed to be inserted.
// swagger:model destinyDefinitionsSocketsDestinySocketTypeDefinitionPlugWhitelist

type DestinyDefinitionsSocketsDestinySocketTypeDefinitionPlugWhitelist []*DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition

// Validate validates this destiny definitions sockets destiny socket type definition plug whitelist
func (m DestinyDefinitionsSocketsDestinySocketTypeDefinitionPlugWhitelist) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {

			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
