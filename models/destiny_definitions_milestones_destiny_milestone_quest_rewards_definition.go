// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition If rewards are given in a quest - as opposed to overall in the entire Milestone - there's way less to track. We're going to simplify this contract as a result. However, this also gives us the opportunity to potentially put more than just item information into the reward data if we're able to mine it out in the future. Remember this if you come back and ask "why are quest reward items nested inside of their own class?"
// swagger:model Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardsDefinition

type DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition struct {

	// items
	Items DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinitionItems `json:"items"`
}

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardsDefinition items false */

// Validate validates this destiny definitions milestones destiny milestone quest rewards definition
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
