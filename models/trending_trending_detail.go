// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TrendingTrendingDetail trending trending detail
// swagger:model Trending.TrendingDetail

type TrendingTrendingDetail struct {

	// creation
	Creation *TrendingTrendingEntryCommunityCreation `json:"creation,omitempty"`

	// destiny activity
	DestinyActivity *TrendingTrendingEntryDestinyActivity `json:"destinyActivity,omitempty"`

	// destiny item
	DestinyItem *TrendingTrendingEntryDestinyItem `json:"destinyItem,omitempty"`

	// destiny ritual
	DestinyRitual *TrendingTrendingEntryDestinyRitual `json:"destinyRitual,omitempty"`

	// entity type
	EntityType TrendingTrendingEntryType `json:"entityType,omitempty"`

	// identifier
	Identifier string `json:"identifier,omitempty"`

	// news
	News *TrendingTrendingEntryNews `json:"news,omitempty"`

	// stream
	Stream *TrendingTrendingEntryCommunityStream `json:"stream,omitempty"`

	// support
	Support *TrendingTrendingEntrySupportArticle `json:"support,omitempty"`
}

/* polymorph Trending.TrendingDetail creation false */

/* polymorph Trending.TrendingDetail destinyActivity false */

/* polymorph Trending.TrendingDetail destinyItem false */

/* polymorph Trending.TrendingDetail destinyRitual false */

/* polymorph Trending.TrendingDetail entityType false */

/* polymorph Trending.TrendingDetail identifier false */

/* polymorph Trending.TrendingDetail news false */

/* polymorph Trending.TrendingDetail stream false */

/* polymorph Trending.TrendingDetail support false */

// Validate validates this trending trending detail
func (m *TrendingTrendingDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreation(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDestinyActivity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDestinyItem(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDestinyRitual(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEntityType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNews(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStream(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSupport(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TrendingTrendingDetail) validateCreation(formats strfmt.Registry) error {

	if swag.IsZero(m.Creation) { // not required
		return nil
	}

	if m.Creation != nil {

		if err := m.Creation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creation")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateDestinyActivity(formats strfmt.Registry) error {

	if swag.IsZero(m.DestinyActivity) { // not required
		return nil
	}

	if m.DestinyActivity != nil {

		if err := m.DestinyActivity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("destinyActivity")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateDestinyItem(formats strfmt.Registry) error {

	if swag.IsZero(m.DestinyItem) { // not required
		return nil
	}

	if m.DestinyItem != nil {

		if err := m.DestinyItem.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("destinyItem")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateDestinyRitual(formats strfmt.Registry) error {

	if swag.IsZero(m.DestinyRitual) { // not required
		return nil
	}

	if m.DestinyRitual != nil {

		if err := m.DestinyRitual.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("destinyRitual")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateEntityType(formats strfmt.Registry) error {

	if swag.IsZero(m.EntityType) { // not required
		return nil
	}

	if err := m.EntityType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("entityType")
		}
		return err
	}

	return nil
}

func (m *TrendingTrendingDetail) validateNews(formats strfmt.Registry) error {

	if swag.IsZero(m.News) { // not required
		return nil
	}

	if m.News != nil {

		if err := m.News.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("news")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateStream(formats strfmt.Registry) error {

	if swag.IsZero(m.Stream) { // not required
		return nil
	}

	if m.Stream != nil {

		if err := m.Stream.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stream")
			}
			return err
		}
	}

	return nil
}

func (m *TrendingTrendingDetail) validateSupport(formats strfmt.Registry) error {

	if swag.IsZero(m.Support) { // not required
		return nil
	}

	if m.Support != nil {

		if err := m.Support.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("support")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TrendingTrendingDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TrendingTrendingDetail) UnmarshalBinary(b []byte) error {
	var res TrendingTrendingDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
