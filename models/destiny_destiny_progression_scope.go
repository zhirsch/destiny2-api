// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DestinyDestinyProgressionScope There are many Progressions in Destiny (think Character Level, or Reputation). These are the various "Scopes" of Progressions, which affect many things: * Where/if they are stored * How they are calculated * Where they can be used in other game logic
// swagger:model Destiny.DestinyProgressionScope

type DestinyDestinyProgressionScope int32

// for schema
var destinyDestinyProgressionScopeEnum []interface{}

func init() {
	var res []DestinyDestinyProgressionScope
	if err := json.Unmarshal([]byte(`[0,1,2,3,4,5,6,7,8]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		destinyDestinyProgressionScopeEnum = append(destinyDestinyProgressionScopeEnum, v)
	}
}

func (m DestinyDestinyProgressionScope) validateDestinyDestinyProgressionScopeEnum(path, location string, value DestinyDestinyProgressionScope) error {
	if err := validate.Enum(path, location, value, destinyDestinyProgressionScopeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this destiny destiny progression scope
func (m DestinyDestinyProgressionScope) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDestinyDestinyProgressionScopeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
