// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyMaterialRequirement Many actions relating to items require you to expend materials: - Activating a talent node - Inserting a plug into a socket The items will refer to material requirements by a materialRequirementsHash in these cases, and this is the definition for those requirements in terms of the item required, how much of it is required and other interesting info. This is one of the rare/strange times where a single contract class is used both in definitions *and* in live data response contracts. I'm not sure yet whether I regret that.
// swagger:model Destiny.Definitions.DestinyMaterialRequirement

type DestinyDefinitionsDestinyMaterialRequirement struct {

	// The amount of the material required.
	Count int32 `json:"count,omitempty"`

	// If True, the material will be removed from the character's inventory when the action is performed.
	DeleteOnAction bool `json:"deleteOnAction,omitempty"`

	// The hash identifier of the material required. Use it to look up the material's DestinyInventoryItemDefinition.
	ItemHash uint32 `json:"itemHash,omitempty"`

	// If True, this requirement is "silent": don't bother showing it in a material requirements display. I mean, I'm not your mom: I'm not going to tell you you *can't* show it. But we won't show it in our UI.
	OmitFromRequirements bool `json:"omitFromRequirements,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyMaterialRequirement count false */

/* polymorph Destiny.Definitions.DestinyMaterialRequirement deleteOnAction false */

/* polymorph Destiny.Definitions.DestinyMaterialRequirement itemHash false */

/* polymorph Destiny.Definitions.DestinyMaterialRequirement omitFromRequirements false */

// Validate validates this destiny definitions destiny material requirement
func (m *DestinyDefinitionsDestinyMaterialRequirement) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyMaterialRequirement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyMaterialRequirement) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyMaterialRequirement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
