// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemSocketEntryDefinition The definition information for a specific socket on an item. This will determine how the socket behaves in-game.
// swagger:model Destiny.Definitions.DestinyItemSocketEntryDefinition

type DestinyDefinitionsDestinyItemSocketEntryDefinition struct {

	// reusable plug items
	ReusablePlugItems DestinyDefinitionsDestinyItemSocketEntryDefinitionReusablePlugItems `json:"reusablePlugItems"`

	// If a valid hash, this is the hash identifier for the DestinyInventoryItemDefinition representing the Plug that will be initially inserted into the item on item creation. Otherwise, this Socket will either start without a plug inserted, or will have one randomly inserted.
	SingleInitialItemHash uint32 `json:"singleInitialItemHash,omitempty"`

	// All sockets have a type, and this is the hash identifier for this particular type. Use it to look up the DestinySocketTypeDefinition: read there for more information on how socket types affect the behavior of the socket.
	SocketTypeHash uint32 `json:"socketTypeHash,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemSocketEntryDefinition reusablePlugItems false */

/* polymorph Destiny.Definitions.DestinyItemSocketEntryDefinition singleInitialItemHash false */

/* polymorph Destiny.Definitions.DestinyItemSocketEntryDefinition socketTypeHash false */

// Validate validates this destiny definitions destiny item socket entry definition
func (m *DestinyDefinitionsDestinyItemSocketEntryDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSocketEntryDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSocketEntryDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemSocketEntryDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
