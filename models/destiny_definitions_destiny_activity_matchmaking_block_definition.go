// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition Information about matchmaking and party size for the activity.
// swagger:model Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition

type DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition struct {

	// If TRUE, the activity is matchmade. Otherwise, it requires explicit forming of a party.
	IsMatchmade bool `json:"isMatchmade,omitempty"`

	// The maximum # of people allowed in a Fireteam.
	MaxParty int32 `json:"maxParty,omitempty"`

	// The maximum # of people allowed across all teams in the activity.
	MaxPlayers int32 `json:"maxPlayers,omitempty"`

	// The minimum # of people in the fireteam for the activity to launch.
	MinParty int32 `json:"minParty,omitempty"`

	// If true, you have to Solemnly Swear to be up to Nothing But Good(tm) to play.
	RequiresGuardianOath bool `json:"requiresGuardianOath,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition isMatchmade false */

/* polymorph Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition maxParty false */

/* polymorph Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition maxPlayers false */

/* polymorph Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition minParty false */

/* polymorph Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition requiresGuardianOath false */

// Validate validates this destiny definitions destiny activity matchmaking block definition
func (m *DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
