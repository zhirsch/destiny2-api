// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyHistoricalStatsDestinyPostGameCarnageReportEntry destiny historical stats destiny post game carnage report entry
// swagger:model Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry

type DestinyHistoricalStatsDestinyPostGameCarnageReportEntry struct {

	// ID of the player's character used in the activity.
	CharacterID int64 `json:"characterId,omitempty,string"`

	// Extended data extracted from the activity blob.
	Extended *DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData `json:"extended,omitempty"`

	// Identity details of the player
	Player *DestinyHistoricalStatsDestinyPlayer `json:"player,omitempty"`

	// Score of the player if available
	Score *DestinyHistoricalStatsDestinyHistoricalStatsValue `json:"score,omitempty"`

	// Standing of the player
	Standing int32 `json:"standing,omitempty"`

	// values
	Values DestinyHistoricalStatsDestinyPostGameCarnageReportEntryValues `json:"values,omitempty"`
}

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry characterId false */

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry extended false */

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry player false */

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry score false */

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry standing false */

/* polymorph Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry values false */

// Validate validates this destiny historical stats destiny post game carnage report entry
func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtended(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePlayer(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateScore(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) validateExtended(formats strfmt.Registry) error {

	if swag.IsZero(m.Extended) { // not required
		return nil
	}

	if m.Extended != nil {

		if err := m.Extended.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extended")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) validatePlayer(formats strfmt.Registry) error {

	if swag.IsZero(m.Player) { // not required
		return nil
	}

	if m.Player != nil {

		if err := m.Player.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("player")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) validateScore(formats strfmt.Registry) error {

	if swag.IsZero(m.Score) { // not required
		return nil
	}

	if m.Score != nil {

		if err := m.Score.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("score")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) UnmarshalBinary(b []byte) error {
	var res DestinyHistoricalStatsDestinyPostGameCarnageReportEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
