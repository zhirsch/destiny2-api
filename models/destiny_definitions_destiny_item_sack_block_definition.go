// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemSackBlockDefinition Some items are "sacks" - they can be "opened" to produce other items. This is information related to its sack status, mostly UI strings. Engrams are an example of items that are considered to be "Sacks".
// swagger:model Destiny.Definitions.DestinyItemSackBlockDefinition

type DestinyDefinitionsDestinyItemSackBlockDefinition struct {

	// A description of what will happen when you open the sack. As far as I can tell, this is blank currently. Unknown whether it will eventually be populated with useful info.
	DetailAction string `json:"detailAction,omitempty"`

	// The localized name of the action being performed when you open the sack.
	OpenAction string `json:"openAction,omitempty"`

	// select item count
	SelectItemCount int32 `json:"selectItemCount,omitempty"`

	// vendor sack type
	VendorSackType string `json:"vendorSackType,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemSackBlockDefinition detailAction false */

/* polymorph Destiny.Definitions.DestinyItemSackBlockDefinition openAction false */

/* polymorph Destiny.Definitions.DestinyItemSackBlockDefinition selectItemCount false */

/* polymorph Destiny.Definitions.DestinyItemSackBlockDefinition vendorSackType false */

// Validate validates this destiny definitions destiny item sack block definition
func (m *DestinyDefinitionsDestinyItemSackBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSackBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSackBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemSackBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
