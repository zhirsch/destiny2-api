// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyPerksDestinyPerkReference The list of perks to display in an item tooltip - and whether or not they have been activated.
// Perks apply a variety of effects to a character, and are generally either intrinsic to the item or provided in activated talent nodes or sockets.
// swagger:model Destiny.Perks.DestinyPerkReference

type DestinyPerksDestinyPerkReference struct {

	// The icon for the perk.
	IconPath string `json:"iconPath,omitempty"`

	// Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item's tooltip, but that the user has not yet activated.)
	IsActive bool `json:"isActive,omitempty"`

	// The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk's definition before you show it to the user.
	PerkHash uint32 `json:"perkHash,omitempty"`

	// Some perks provide benefits, but aren't visible in the UI. This value will let you know if this is perk should be shown in your UI.
	Visible bool `json:"visible,omitempty"`
}

/* polymorph Destiny.Perks.DestinyPerkReference iconPath false */

/* polymorph Destiny.Perks.DestinyPerkReference isActive false */

/* polymorph Destiny.Perks.DestinyPerkReference perkHash false */

/* polymorph Destiny.Perks.DestinyPerkReference visible false */

// Validate validates this destiny perks destiny perk reference
func (m *DestinyPerksDestinyPerkReference) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyPerksDestinyPerkReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyPerksDestinyPerkReference) UnmarshalBinary(b []byte) error {
	var res DestinyPerksDestinyPerkReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
