// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock destiny definitions items destiny item tier type infusion block
// swagger:model Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock

type DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock struct {

	// The default portion of quality that will transfer from the infuser to the infusee item. (InfuserQuality - InfuseeQuality) * baseQualityTransferRatio = base quality transferred.
	BaseQualityTransferRatio float32 `json:"baseQualityTransferRatio,omitempty"`

	// As long as InfuserQuality > InfuseeQuality, the amount of quality bestowed is guaranteed to be at least this value, even if the transferRatio would dictate that it should be less. The total amount of quality that ends up in the Infusee cannot exceed the Infuser's quality however (for instance, if you infuse a 300 item with a 301 item and the minimum quality increment is 10, the infused item will not end up with 310 quality)
	MinimumQualityIncrement int32 `json:"minimumQualityIncrement,omitempty"`
}

/* polymorph Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock baseQualityTransferRatio false */

/* polymorph Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock minimumQualityIncrement false */

// Validate validates this destiny definitions items destiny item tier type infusion block
func (m *DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
