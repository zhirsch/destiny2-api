// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemSourceBlockDefinition Data about an item's "sources": ways that the item can be obtained.
// swagger:model Destiny.Definitions.DestinyItemSourceBlockDefinition

type DestinyDefinitionsDestinyItemSourceBlockDefinition struct {

	// If we found that this item is exclusive to a specific platform, this will be set to the BungieMembershipType enumeration that matches that platform.
	Exclusive BungieMembershipType `json:"exclusive,omitempty"`

	// The list of hash identifiers for Reward Sources that hint where the item can be found (DestinyRewardSourceDefinition).
	SourceHashes []uint32 `json:"sourceHashes"`

	// sources
	Sources DestinyDefinitionsDestinyItemSourceBlockDefinitionSources `json:"sources"`
}

/* polymorph Destiny.Definitions.DestinyItemSourceBlockDefinition exclusive false */

/* polymorph Destiny.Definitions.DestinyItemSourceBlockDefinition sourceHashes false */

/* polymorph Destiny.Definitions.DestinyItemSourceBlockDefinition sources false */

// Validate validates this destiny definitions destiny item source block definition
func (m *DestinyDefinitionsDestinyItemSourceBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExclusive(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSourceHashes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyItemSourceBlockDefinition) validateExclusive(formats strfmt.Registry) error {

	if swag.IsZero(m.Exclusive) { // not required
		return nil
	}

	if err := m.Exclusive.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("exclusive")
		}
		return err
	}

	return nil
}

func (m *DestinyDefinitionsDestinyItemSourceBlockDefinition) validateSourceHashes(formats strfmt.Registry) error {

	if swag.IsZero(m.SourceHashes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSourceBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemSourceBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemSourceBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
