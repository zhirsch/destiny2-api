// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyComponentsKiosksDestinyKioskItem destiny components kiosks destiny kiosk item
// swagger:model Destiny.Components.Kiosks.DestinyKioskItem

type DestinyComponentsKiosksDestinyKioskItem struct {

	// If true, the user can not only see the item, but they can acquire it. It is possible that a user can see a kiosk item and not be able to acquire it.
	CanAcquire bool `json:"canAcquire,omitempty"`

	// Indexes into failureStrings for the Vendor, indicating the reasons why it failed if any.
	FailureIndexes []int32 `json:"failureIndexes"`

	// The index of the item in the related DestinyVendorDefintion's itemList property, representing the sale.
	Index int32 `json:"index,omitempty"`
}

/* polymorph Destiny.Components.Kiosks.DestinyKioskItem canAcquire false */

/* polymorph Destiny.Components.Kiosks.DestinyKioskItem failureIndexes false */

/* polymorph Destiny.Components.Kiosks.DestinyKioskItem index false */

// Validate validates this destiny components kiosks destiny kiosk item
func (m *DestinyComponentsKiosksDestinyKioskItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFailureIndexes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyComponentsKiosksDestinyKioskItem) validateFailureIndexes(formats strfmt.Registry) error {

	if swag.IsZero(m.FailureIndexes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyComponentsKiosksDestinyKioskItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyComponentsKiosksDestinyKioskItem) UnmarshalBinary(b []byte) error {
	var res DestinyComponentsKiosksDestinyKioskItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
