// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DestinyActivityGraphNodeHighlightType The various known UI styles in which an item can be highlighted. It'll be up to you to determine what you want to show based on this highlighting, BNet doesn't have any assets that correspond to these states. And yeah, RiseOfIron and Comet have their own special highlight states. Don't ask me, I can't imagine they're still used.
// swagger:model Destiny.ActivityGraphNodeHighlightType

type DestinyActivityGraphNodeHighlightType int32

// for schema
var destinyActivityGraphNodeHighlightTypeEnum []interface{}

func init() {
	var res []DestinyActivityGraphNodeHighlightType
	if err := json.Unmarshal([]byte(`[0,1,2,3,4]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		destinyActivityGraphNodeHighlightTypeEnum = append(destinyActivityGraphNodeHighlightTypeEnum, v)
	}
}

func (m DestinyActivityGraphNodeHighlightType) validateDestinyActivityGraphNodeHighlightTypeEnum(path, location string, value DestinyActivityGraphNodeHighlightType) error {
	if err := validate.Enum(path, location, value, destinyActivityGraphNodeHighlightTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this destiny activity graph node highlight type
func (m DestinyActivityGraphNodeHighlightType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDestinyActivityGraphNodeHighlightTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
