// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition The definition of a specific reward, which may be contained in a category of rewards and that has optional information about how it is obtained.
// swagger:model Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition

type DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition struct {

	// For us to bother returning this info, we should be able to return some kind of information about why these rewards are grouped together. This is ideally that information. Look at how confident I am that this will always remain true.
	DisplayProperties *DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition `json:"displayProperties,omitempty"`

	// items
	Items DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinitionItems `json:"items"`

	// If you want to follow BNet's ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.
	Order int32 `json:"order,omitempty"`

	// The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.
	RewardEntryHash uint32 `json:"rewardEntryHash,omitempty"`

	// The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.
	RewardEntryIdentifier string `json:"rewardEntryIdentifier,omitempty"`

	// If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.
	VendorHash uint32 `json:"vendorHash,omitempty"`
}

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition displayProperties false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition items false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition order false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition rewardEntryHash false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition rewardEntryIdentifier false */

/* polymorph Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition vendorHash false */

// Validate validates this destiny definitions milestones destiny milestone reward entry definition
func (m *DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition) validateDisplayProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.DisplayProperties) { // not required
		return nil
	}

	if m.DisplayProperties != nil {

		if err := m.DisplayProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("displayProperties")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
