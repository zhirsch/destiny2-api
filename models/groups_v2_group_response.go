// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GroupsV2GroupResponse groups v2 group response
// swagger:model GroupsV2.GroupResponse

type GroupsV2GroupResponse struct {

	// alliance status
	AllianceStatus GroupsV2GroupAllianceStatus `json:"allianceStatus,omitempty"`

	// allied ids
	AlliedIds []int64 `json:"alliedIds"`

	// current user member map
	CurrentUserMemberMap GroupsV2GroupResponseCurrentUserMemberMap `json:"currentUserMemberMap,omitempty"`

	// current user potential member map
	CurrentUserPotentialMemberMap GroupsV2GroupResponseCurrentUserPotentialMemberMap `json:"currentUserPotentialMemberMap,omitempty"`

	// detail
	Detail *GroupsV2GroupV2 `json:"detail,omitempty"`

	// founder
	Founder *GroupsV2GroupMember `json:"founder,omitempty"`

	// group join invite count
	GroupJoinInviteCount int32 `json:"groupJoinInviteCount,omitempty"`

	// parent group
	ParentGroup *GroupsV2GroupV2 `json:"parentGroup,omitempty"`
}

/* polymorph GroupsV2.GroupResponse allianceStatus false */

/* polymorph GroupsV2.GroupResponse alliedIds false */

/* polymorph GroupsV2.GroupResponse currentUserMemberMap false */

/* polymorph GroupsV2.GroupResponse currentUserPotentialMemberMap false */

/* polymorph GroupsV2.GroupResponse detail false */

/* polymorph GroupsV2.GroupResponse founder false */

/* polymorph GroupsV2.GroupResponse groupJoinInviteCount false */

/* polymorph GroupsV2.GroupResponse parentGroup false */

// Validate validates this groups v2 group response
func (m *GroupsV2GroupResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllianceStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlliedIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDetail(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFounder(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateParentGroup(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupsV2GroupResponse) validateAllianceStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.AllianceStatus) { // not required
		return nil
	}

	if err := m.AllianceStatus.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("allianceStatus")
		}
		return err
	}

	return nil
}

func (m *GroupsV2GroupResponse) validateAlliedIds(formats strfmt.Registry) error {

	if swag.IsZero(m.AlliedIds) { // not required
		return nil
	}

	return nil
}

func (m *GroupsV2GroupResponse) validateDetail(formats strfmt.Registry) error {

	if swag.IsZero(m.Detail) { // not required
		return nil
	}

	if m.Detail != nil {

		if err := m.Detail.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("detail")
			}
			return err
		}
	}

	return nil
}

func (m *GroupsV2GroupResponse) validateFounder(formats strfmt.Registry) error {

	if swag.IsZero(m.Founder) { // not required
		return nil
	}

	if m.Founder != nil {

		if err := m.Founder.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("founder")
			}
			return err
		}
	}

	return nil
}

func (m *GroupsV2GroupResponse) validateParentGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.ParentGroup) { // not required
		return nil
	}

	if m.ParentGroup != nil {

		if err := m.ParentGroup.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("parentGroup")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupsV2GroupResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupsV2GroupResponse) UnmarshalBinary(b []byte) error {
	var res GroupsV2GroupResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
