// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyHistoricalStatsDestinyHistoricalStatsValue destiny historical stats destiny historical stats value
// swagger:model Destiny.HistoricalStats.DestinyHistoricalStatsValue

type DestinyHistoricalStatsDestinyHistoricalStatsValue struct {

	// Basic stat value.
	Basic *DestinyHistoricalStatsDestinyHistoricalStatsValuePair `json:"basic,omitempty"`

	// Per game average for the statistic, if applicable
	Pga *DestinyHistoricalStatsDestinyHistoricalStatsValuePair `json:"pga,omitempty"`

	// Unique ID for this stat
	StatID string `json:"statId,omitempty"`

	// Weighted value of the stat if a weight greater than 1 has been assigned.
	Weighted *DestinyHistoricalStatsDestinyHistoricalStatsValuePair `json:"weighted,omitempty"`
}

/* polymorph Destiny.HistoricalStats.DestinyHistoricalStatsValue basic false */

/* polymorph Destiny.HistoricalStats.DestinyHistoricalStatsValue pga false */

/* polymorph Destiny.HistoricalStats.DestinyHistoricalStatsValue statId false */

/* polymorph Destiny.HistoricalStats.DestinyHistoricalStatsValue weighted false */

// Validate validates this destiny historical stats destiny historical stats value
func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBasic(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePga(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateWeighted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) validateBasic(formats strfmt.Registry) error {

	if swag.IsZero(m.Basic) { // not required
		return nil
	}

	if m.Basic != nil {

		if err := m.Basic.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("basic")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) validatePga(formats strfmt.Registry) error {

	if swag.IsZero(m.Pga) { // not required
		return nil
	}

	if m.Pga != nil {

		if err := m.Pga.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pga")
			}
			return err
		}
	}

	return nil
}

func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) validateWeighted(formats strfmt.Registry) error {

	if swag.IsZero(m.Weighted) { // not required
		return nil
	}

	if m.Weighted != nil {

		if err := m.Weighted.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("weighted")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyHistoricalStatsDestinyHistoricalStatsValue) UnmarshalBinary(b []byte) error {
	var res DestinyHistoricalStatsDestinyHistoricalStatsValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
