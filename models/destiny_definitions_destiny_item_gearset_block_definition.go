// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemGearsetBlockDefinition If an item has a related gearset, this is the list of items in that set, and an unlock expression that evaluates to a number representing the progress toward gearset completion (a very rare use for unlock expressions!)
// swagger:model Destiny.Definitions.DestinyItemGearsetBlockDefinition

type DestinyDefinitionsDestinyItemGearsetBlockDefinition struct {

	// The list of hashes for items in the gearset. Use them to look up DestinyInventoryItemDefinition entries for the items in the set.
	ItemList []uint32 `json:"itemList"`

	// The maximum possible number of items that can be collected.
	TrackingValueMax int32 `json:"trackingValueMax,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemGearsetBlockDefinition itemList false */

/* polymorph Destiny.Definitions.DestinyItemGearsetBlockDefinition trackingValueMax false */

// Validate validates this destiny definitions destiny item gearset block definition
func (m *DestinyDefinitionsDestinyItemGearsetBlockDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItemList(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyItemGearsetBlockDefinition) validateItemList(formats strfmt.Registry) error {

	if swag.IsZero(m.ItemList) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemGearsetBlockDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemGearsetBlockDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemGearsetBlockDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
