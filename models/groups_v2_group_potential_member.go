// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GroupsV2GroupPotentialMember groups v2 group potential member
// swagger:model GroupsV2.GroupPotentialMember

type GroupsV2GroupPotentialMember struct {

	// bungie net user info
	BungieNetUserInfo *UserUserInfoCard `json:"bungieNetUserInfo,omitempty"`

	// destiny user info
	DestinyUserInfo *UserUserInfoCard `json:"destinyUserInfo,omitempty"`

	// group Id
	GroupID int64 `json:"groupId,omitempty"`

	// join date
	JoinDate strfmt.DateTime `json:"joinDate,omitempty"`

	// potential status
	PotentialStatus GroupsV2GroupPotentialMemberStatus `json:"potentialStatus,omitempty"`
}

/* polymorph GroupsV2.GroupPotentialMember bungieNetUserInfo false */

/* polymorph GroupsV2.GroupPotentialMember destinyUserInfo false */

/* polymorph GroupsV2.GroupPotentialMember groupId false */

/* polymorph GroupsV2.GroupPotentialMember joinDate false */

/* polymorph GroupsV2.GroupPotentialMember potentialStatus false */

// Validate validates this groups v2 group potential member
func (m *GroupsV2GroupPotentialMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBungieNetUserInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDestinyUserInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePotentialStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupsV2GroupPotentialMember) validateBungieNetUserInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.BungieNetUserInfo) { // not required
		return nil
	}

	if m.BungieNetUserInfo != nil {

		if err := m.BungieNetUserInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bungieNetUserInfo")
			}
			return err
		}
	}

	return nil
}

func (m *GroupsV2GroupPotentialMember) validateDestinyUserInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.DestinyUserInfo) { // not required
		return nil
	}

	if m.DestinyUserInfo != nil {

		if err := m.DestinyUserInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("destinyUserInfo")
			}
			return err
		}
	}

	return nil
}

func (m *GroupsV2GroupPotentialMember) validatePotentialStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.PotentialStatus) { // not required
		return nil
	}

	if err := m.PotentialStatus.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("potentialStatus")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupsV2GroupPotentialMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupsV2GroupPotentialMember) UnmarshalBinary(b []byte) error {
	var res GroupsV2GroupPotentialMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
