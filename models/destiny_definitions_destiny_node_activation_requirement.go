// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyNodeActivationRequirement Talent nodes have requirements that must be met before they can be activated.
// This describes the material costs, the Level of the Talent Grid's progression required, and other conditional information that limits whether a talent node can be activated.
// swagger:model Destiny.Definitions.DestinyNodeActivationRequirement

type DestinyDefinitionsDestinyNodeActivationRequirement struct {

	// The Progression level on the Talent Grid required to activate this node.
	// See DestinyTalentGridDefinition.progressionHash for the related Progression, and read DestinyProgressionDefinition's documentation to learn more about Progressions.
	GridLevel int32 `json:"gridLevel,omitempty"`

	// The list of hash identifiers for material requirement sets: materials that are required for the node to be activated. See DestinyMaterialRequirementSetDefinition for more information about material requirements.
	// In this case, only a single DestinyMaterialRequirementSetDefinition will be chosen from this list, and we won't know which one will be chosen until an instance of the item is created.
	MaterialRequirementHashes []uint32 `json:"materialRequirementHashes"`
}

/* polymorph Destiny.Definitions.DestinyNodeActivationRequirement gridLevel false */

/* polymorph Destiny.Definitions.DestinyNodeActivationRequirement materialRequirementHashes false */

// Validate validates this destiny definitions destiny node activation requirement
func (m *DestinyDefinitionsDestinyNodeActivationRequirement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaterialRequirementHashes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyDefinitionsDestinyNodeActivationRequirement) validateMaterialRequirementHashes(formats strfmt.Registry) error {

	if swag.IsZero(m.MaterialRequirementHashes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyNodeActivationRequirement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyNodeActivationRequirement) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyNodeActivationRequirement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
