// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyItemInvestmentStatDefinition Represents a "raw" investment stat, before calculated stats are calculated and before any DestinyStatGroupDefinition is applied to transform the stat into something closer to what you see in-game.
// Because these won't match what you see in-game, consider carefully whether you really want to use these stats. I have left them in case someone can do something useful or interesting with the pre-processed statistics.
// swagger:model Destiny.Definitions.DestinyItemInvestmentStatDefinition

type DestinyDefinitionsDestinyItemInvestmentStatDefinition struct {

	// The hash identifier for the DestinyStatDefinition defining this stat.
	StatTypeHash uint32 `json:"statTypeHash,omitempty"`

	// The raw "Investment" value for the stat, before transformations are performed to turn this raw stat into stats that are displayed in the game UI.
	Value int32 `json:"value,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyItemInvestmentStatDefinition statTypeHash false */

/* polymorph Destiny.Definitions.DestinyItemInvestmentStatDefinition value false */

// Validate validates this destiny definitions destiny item investment stat definition
func (m *DestinyDefinitionsDestinyItemInvestmentStatDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemInvestmentStatDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyItemInvestmentStatDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyItemInvestmentStatDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
