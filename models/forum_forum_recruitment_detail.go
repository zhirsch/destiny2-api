// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ForumForumRecruitmentDetail forum forum recruitment detail
// swagger:model Forum.ForumRecruitmentDetail

type ForumForumRecruitmentDetail struct {

	// fireteam
	Fireteam ForumForumRecruitmentDetailFireteam `json:"Fireteam"`

	// approved
	Approved bool `json:"approved,omitempty"`

	// conversation Id
	ConversationID int64 `json:"conversationId,omitempty"`

	// intensity
	Intensity ForumForumRecruitmentIntensityLabel `json:"intensity,omitempty"`

	// kicked player ids
	KickedPlayerIds []int64 `json:"kickedPlayerIds"`

	// microphone required
	MicrophoneRequired bool `json:"microphoneRequired,omitempty"`

	// player slots remaining
	PlayerSlotsRemaining int32 `json:"playerSlotsRemaining,omitempty"`

	// player slots total
	PlayerSlotsTotal int32 `json:"playerSlotsTotal,omitempty"`

	// tone
	Tone ForumForumRecruitmentToneLabel `json:"tone,omitempty"`

	// topic Id
	TopicID int64 `json:"topicId,omitempty"`
}

/* polymorph Forum.ForumRecruitmentDetail Fireteam false */

/* polymorph Forum.ForumRecruitmentDetail approved false */

/* polymorph Forum.ForumRecruitmentDetail conversationId false */

/* polymorph Forum.ForumRecruitmentDetail intensity false */

/* polymorph Forum.ForumRecruitmentDetail kickedPlayerIds false */

/* polymorph Forum.ForumRecruitmentDetail microphoneRequired false */

/* polymorph Forum.ForumRecruitmentDetail playerSlotsRemaining false */

/* polymorph Forum.ForumRecruitmentDetail playerSlotsTotal false */

/* polymorph Forum.ForumRecruitmentDetail tone false */

/* polymorph Forum.ForumRecruitmentDetail topicId false */

// Validate validates this forum forum recruitment detail
func (m *ForumForumRecruitmentDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIntensity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateKickedPlayerIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTone(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ForumForumRecruitmentDetail) validateIntensity(formats strfmt.Registry) error {

	if swag.IsZero(m.Intensity) { // not required
		return nil
	}

	if err := m.Intensity.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("intensity")
		}
		return err
	}

	return nil
}

func (m *ForumForumRecruitmentDetail) validateKickedPlayerIds(formats strfmt.Registry) error {

	if swag.IsZero(m.KickedPlayerIds) { // not required
		return nil
	}

	return nil
}

func (m *ForumForumRecruitmentDetail) validateTone(formats strfmt.Registry) error {

	if swag.IsZero(m.Tone) { // not required
		return nil
	}

	if err := m.Tone.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("tone")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ForumForumRecruitmentDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ForumForumRecruitmentDetail) UnmarshalBinary(b []byte) error {
	var res ForumForumRecruitmentDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
