// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// UserAckState user ack state
// swagger:model User.AckState

type UserAckState struct {

	// Identifier to use when acknowledging the related item. [category]:[entityId]:[targetId]
	AckID string `json:"ackId,omitempty"`

	// Indicates the related item has not been acknowledged.
	NeedsAck bool `json:"needsAck,omitempty"`
}

/* polymorph User.AckState ackId false */

/* polymorph User.AckState needsAck false */

// Validate validates this user ack state
func (m *UserAckState) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *UserAckState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserAckState) UnmarshalBinary(b []byte) error {
	var res UserAckState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
