// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyRequestsActionsDestinyItemStateRequest destiny requests actions destiny item state request
// swagger:model Destiny.Requests.Actions.DestinyItemStateRequest

type DestinyRequestsActionsDestinyItemStateRequest struct {

	// character Id
	CharacterID int64 `json:"characterId,omitempty"`

	// item Id
	ItemID int64 `json:"itemId,omitempty"`

	// membership type
	MembershipType BungieMembershipType `json:"membershipType,omitempty"`

	// state
	State bool `json:"state,omitempty"`
}

/* polymorph Destiny.Requests.Actions.DestinyItemStateRequest characterId false */

/* polymorph Destiny.Requests.Actions.DestinyItemStateRequest itemId false */

/* polymorph Destiny.Requests.Actions.DestinyItemStateRequest membershipType false */

/* polymorph Destiny.Requests.Actions.DestinyItemStateRequest state false */

// Validate validates this destiny requests actions destiny item state request
func (m *DestinyRequestsActionsDestinyItemStateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMembershipType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyRequestsActionsDestinyItemStateRequest) validateMembershipType(formats strfmt.Registry) error {

	if swag.IsZero(m.MembershipType) { // not required
		return nil
	}

	if err := m.MembershipType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("membershipType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyRequestsActionsDestinyItemStateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyRequestsActionsDestinyItemStateRequest) UnmarshalBinary(b []byte) error {
	var res DestinyRequestsActionsDestinyItemStateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
