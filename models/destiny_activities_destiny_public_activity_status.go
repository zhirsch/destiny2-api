// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyActivitiesDestinyPublicActivityStatus Represents the public-facing status of an activity: any data about what is currently active in the Activity, regardless of an individual character's progress in it.
// swagger:model Destiny.Activities.DestinyPublicActivityStatus

type DestinyActivitiesDestinyPublicActivityStatus struct {

	// Active Challenges for the activity, if any - represented as hashes for DestinyObjectiveDefinitions.
	ChallengeObjectiveHashes []uint32 `json:"challengeObjectiveHashes"`

	// The active modifiers on this activity, if any - represented as hashes for DestinyActivityModifierDefinitions.
	ModifierHashes []uint32 `json:"modifierHashes"`

	// reward tooltip items
	RewardTooltipItems DestinyActivitiesDestinyPublicActivityStatusRewardTooltipItems `json:"rewardTooltipItems"`
}

/* polymorph Destiny.Activities.DestinyPublicActivityStatus challengeObjectiveHashes false */

/* polymorph Destiny.Activities.DestinyPublicActivityStatus modifierHashes false */

/* polymorph Destiny.Activities.DestinyPublicActivityStatus rewardTooltipItems false */

// Validate validates this destiny activities destiny public activity status
func (m *DestinyActivitiesDestinyPublicActivityStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChallengeObjectiveHashes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateModifierHashes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyActivitiesDestinyPublicActivityStatus) validateChallengeObjectiveHashes(formats strfmt.Registry) error {

	if swag.IsZero(m.ChallengeObjectiveHashes) { // not required
		return nil
	}

	return nil
}

func (m *DestinyActivitiesDestinyPublicActivityStatus) validateModifierHashes(formats strfmt.Registry) error {

	if swag.IsZero(m.ModifierHashes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyActivitiesDestinyPublicActivityStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyActivitiesDestinyPublicActivityStatus) UnmarshalBinary(b []byte) error {
	var res DestinyActivitiesDestinyPublicActivityStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
