// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ContentContentItemPublicContract content content item public contract
// swagger:model Content.ContentItemPublicContract

type ContentContentItemPublicContract struct {

	// allow comments
	AllowComments bool `json:"allowComments,omitempty"`

	// author
	Author *UserGeneralUser `json:"author,omitempty"`

	// auto english property fallback
	AutoEnglishPropertyFallback bool `json:"autoEnglishPropertyFallback,omitempty"`

	// c type
	CType string `json:"cType,omitempty"`

	// cms path
	CmsPath string `json:"cmsPath,omitempty"`

	// comment summary
	CommentSummary *ContentCommentSummary `json:"commentSummary,omitempty"`

	// content Id
	ContentID int64 `json:"contentId,omitempty"`

	// creation date
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// has age gate
	HasAgeGate bool `json:"hasAgeGate,omitempty"`

	// minimum age
	MinimumAge int32 `json:"minimumAge,omitempty"`

	// modify date
	ModifyDate strfmt.DateTime `json:"modifyDate,omitempty"`

	// Firehose content is really a collection of metadata and "properties", which are the potentially-but-not-strictly localizable data that comprises the meat of whatever content is being shown.
	// As Cole Porter would have crooned, "Anything Goes" with Firehose properties. They are most often strings, but they can theoretically be anything. They are JSON encoded, and could be JSON structures, simple strings, numbers etc... The Content Type of the item (cType) will describe the properties, and thus how they ought to be deserialized.
	Properties map[string]interface{} `json:"properties,omitempty"`

	// rating image path
	RatingImagePath string `json:"ratingImagePath,omitempty"`

	// representations
	Representations ContentContentItemPublicContractRepresentations `json:"representations"`

	// tags
	Tags []string `json:"tags"`
}

/* polymorph Content.ContentItemPublicContract allowComments false */

/* polymorph Content.ContentItemPublicContract author false */

/* polymorph Content.ContentItemPublicContract autoEnglishPropertyFallback false */

/* polymorph Content.ContentItemPublicContract cType false */

/* polymorph Content.ContentItemPublicContract cmsPath false */

/* polymorph Content.ContentItemPublicContract commentSummary false */

/* polymorph Content.ContentItemPublicContract contentId false */

/* polymorph Content.ContentItemPublicContract creationDate false */

/* polymorph Content.ContentItemPublicContract hasAgeGate false */

/* polymorph Content.ContentItemPublicContract minimumAge false */

/* polymorph Content.ContentItemPublicContract modifyDate false */

/* polymorph Content.ContentItemPublicContract properties false */

/* polymorph Content.ContentItemPublicContract ratingImagePath false */

/* polymorph Content.ContentItemPublicContract representations false */

/* polymorph Content.ContentItemPublicContract tags false */

// Validate validates this content content item public contract
func (m *ContentContentItemPublicContract) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCommentSummary(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTags(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContentContentItemPublicContract) validateAuthor(formats strfmt.Registry) error {

	if swag.IsZero(m.Author) { // not required
		return nil
	}

	if m.Author != nil {

		if err := m.Author.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("author")
			}
			return err
		}
	}

	return nil
}

func (m *ContentContentItemPublicContract) validateCommentSummary(formats strfmt.Registry) error {

	if swag.IsZero(m.CommentSummary) { // not required
		return nil
	}

	if m.CommentSummary != nil {

		if err := m.CommentSummary.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("commentSummary")
			}
			return err
		}
	}

	return nil
}

func (m *ContentContentItemPublicContract) validateTags(formats strfmt.Registry) error {

	if swag.IsZero(m.Tags) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContentContentItemPublicContract) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContentContentItemPublicContract) UnmarshalBinary(b []byte) error {
	var res ContentContentItemPublicContract
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
