// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition These are pre-constructed collections of data that can be used to determine the Level Requirement for an item given a Progression to be tested (such as the Character's level).
// For instance, say a character receives a new Auto Rifle, and that Auto Rifle's DestinyInventoryItemDefinition.quality.progressionLevelRequirementHash property is pointing at one of these DestinyProgressionLevelRequirementDefinitions. Let's pretend also that the progressionHash it is pointing at is the Character Level progression. In that situation, the character's level will be used to interpolate a value in the requirementCurve property. The value picked up from that interpolation will be the required level for the item.
// swagger:model Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition

type DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition struct {

	// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
	// When entities refer to each other in Destiny content, it is this hash that they are referring to.
	Hash uint32 `json:"hash,omitempty"`

	// The index of the entity as it was found in the investment tables.
	Index int32 `json:"index,omitempty"`

	// The progression whose level should be used to determine the level requirement.
	// Look up the DestinyProgressionDefinition with this hash for more information about the progression in question.
	ProgressionHash uint32 `json:"progressionHash,omitempty"`

	// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
	Redacted bool `json:"redacted,omitempty"`

	// requirement curve
	RequirementCurve DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinitionRequirementCurve `json:"requirementCurve"`
}

/* polymorph Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition hash false */

/* polymorph Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition index false */

/* polymorph Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition progressionHash false */

/* polymorph Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition redacted false */

/* polymorph Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition requirementCurve false */

// Validate validates this destiny definitions progression destiny progression level requirement definition
func (m *DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
