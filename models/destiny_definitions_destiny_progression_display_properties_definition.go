// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition destiny definitions destiny progression display properties definition
// swagger:model Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition

type DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition struct {

	// description
	Description string `json:"description,omitempty"`

	// When progressions show your "experience" gained, that bar has units (i.e. "Experience", "Bad Dudes Snuffed Out", whatever). This is the localized string for that unit of measurement.
	DisplayUnitsName string `json:"displayUnitsName,omitempty"`

	// has icon
	HasIcon bool `json:"hasIcon,omitempty"`

	// Note that "icon" is sometimes misleading, and should be interpreted in the context of the entity. For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.
	// But usually, it will be a small square image that you can use as... well, an icon.
	Icon string `json:"icon,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

/* polymorph Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition description false */

/* polymorph Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition displayUnitsName false */

/* polymorph Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition hasIcon false */

/* polymorph Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition icon false */

/* polymorph Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition name false */

// Validate validates this destiny definitions destiny progression display properties definition
func (m *DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition) UnmarshalBinary(b []byte) error {
	var res DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
