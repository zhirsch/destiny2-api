// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DestinyMilestonesDestinyMilestoneActivityVariant Represents custom data that we know about an individual variant of an activity.
// swagger:model Destiny.Milestones.DestinyMilestoneActivityVariant

type DestinyMilestonesDestinyMilestoneActivityVariant struct {

	// The hash for the specific variant of the activity related to this milestone. You can pull more detailed static info from the DestinyActivityDefinition, such as difficulty level.
	ActivityHash uint32 `json:"activityHash,omitempty"`

	// An OPTIONAL component: if it makes sense to talk about this activity variant in terms of whether or not it has been completed or what progress you have made in it, this will be returned. Otherwise, this will be NULL.
	CompletionStatus *DestinyMilestonesDestinyMilestoneActivityCompletionStatus `json:"completionStatus,omitempty"`
}

/* polymorph Destiny.Milestones.DestinyMilestoneActivityVariant activityHash false */

/* polymorph Destiny.Milestones.DestinyMilestoneActivityVariant completionStatus false */

// Validate validates this destiny milestones destiny milestone activity variant
func (m *DestinyMilestonesDestinyMilestoneActivityVariant) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompletionStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestinyMilestonesDestinyMilestoneActivityVariant) validateCompletionStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.CompletionStatus) { // not required
		return nil
	}

	if m.CompletionStatus != nil {

		if err := m.CompletionStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("completionStatus")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneActivityVariant) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestinyMilestonesDestinyMilestoneActivityVariant) UnmarshalBinary(b []byte) error {
	var res DestinyMilestonesDestinyMilestoneActivityVariant
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
