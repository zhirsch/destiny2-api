// Code generated by go-swagger; DO NOT EDIT.

package destiny2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDestiny2GetDestinyEntityDefinitionParams creates a new Destiny2GetDestinyEntityDefinitionParams object
// with the default values initialized.
func NewDestiny2GetDestinyEntityDefinitionParams() *Destiny2GetDestinyEntityDefinitionParams {
	var ()
	return &Destiny2GetDestinyEntityDefinitionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDestiny2GetDestinyEntityDefinitionParamsWithTimeout creates a new Destiny2GetDestinyEntityDefinitionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDestiny2GetDestinyEntityDefinitionParamsWithTimeout(timeout time.Duration) *Destiny2GetDestinyEntityDefinitionParams {
	var ()
	return &Destiny2GetDestinyEntityDefinitionParams{

		timeout: timeout,
	}
}

// NewDestiny2GetDestinyEntityDefinitionParamsWithContext creates a new Destiny2GetDestinyEntityDefinitionParams object
// with the default values initialized, and the ability to set a context for a request
func NewDestiny2GetDestinyEntityDefinitionParamsWithContext(ctx context.Context) *Destiny2GetDestinyEntityDefinitionParams {
	var ()
	return &Destiny2GetDestinyEntityDefinitionParams{

		Context: ctx,
	}
}

// NewDestiny2GetDestinyEntityDefinitionParamsWithHTTPClient creates a new Destiny2GetDestinyEntityDefinitionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDestiny2GetDestinyEntityDefinitionParamsWithHTTPClient(client *http.Client) *Destiny2GetDestinyEntityDefinitionParams {
	var ()
	return &Destiny2GetDestinyEntityDefinitionParams{
		HTTPClient: client,
	}
}

/*Destiny2GetDestinyEntityDefinitionParams contains all the parameters to send to the API endpoint
for the destiny2 get destiny entity definition operation typically these are written to a http.Request
*/
type Destiny2GetDestinyEntityDefinitionParams struct {

	/*EntityType
	  The type of entity for whom you would like results. These correspond to the entity's definition contract name. For instance, if you are looking for items, this property should be 'DestinyInventoryItemDefinition'. PREVIEW: This endpoint is still in beta, and may experience rough edges. The schema is tentatively in final form, but there may be bugs that prevent desirable operation.

	*/
	EntityType string
	/*HashIdentifier
	  The hash identifier for the specific Entity you want returned.

	*/
	HashIdentifier uint32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) WithTimeout(timeout time.Duration) *Destiny2GetDestinyEntityDefinitionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) WithContext(ctx context.Context) *Destiny2GetDestinyEntityDefinitionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) WithHTTPClient(client *http.Client) *Destiny2GetDestinyEntityDefinitionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntityType adds the entityType to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) WithEntityType(entityType string) *Destiny2GetDestinyEntityDefinitionParams {
	o.SetEntityType(entityType)
	return o
}

// SetEntityType adds the entityType to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) SetEntityType(entityType string) {
	o.EntityType = entityType
}

// WithHashIdentifier adds the hashIdentifier to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) WithHashIdentifier(hashIdentifier uint32) *Destiny2GetDestinyEntityDefinitionParams {
	o.SetHashIdentifier(hashIdentifier)
	return o
}

// SetHashIdentifier adds the hashIdentifier to the destiny2 get destiny entity definition params
func (o *Destiny2GetDestinyEntityDefinitionParams) SetHashIdentifier(hashIdentifier uint32) {
	o.HashIdentifier = hashIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *Destiny2GetDestinyEntityDefinitionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param entityType
	if err := r.SetPathParam("entityType", o.EntityType); err != nil {
		return err
	}

	// path param hashIdentifier
	if err := r.SetPathParam("hashIdentifier", swag.FormatUint32(o.HashIdentifier)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
