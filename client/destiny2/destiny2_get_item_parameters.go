// Code generated by go-swagger; DO NOT EDIT.

package destiny2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDestiny2GetItemParams creates a new Destiny2GetItemParams object
// with the default values initialized.
func NewDestiny2GetItemParams() *Destiny2GetItemParams {
	var ()
	return &Destiny2GetItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDestiny2GetItemParamsWithTimeout creates a new Destiny2GetItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDestiny2GetItemParamsWithTimeout(timeout time.Duration) *Destiny2GetItemParams {
	var ()
	return &Destiny2GetItemParams{

		timeout: timeout,
	}
}

// NewDestiny2GetItemParamsWithContext creates a new Destiny2GetItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewDestiny2GetItemParamsWithContext(ctx context.Context) *Destiny2GetItemParams {
	var ()
	return &Destiny2GetItemParams{

		Context: ctx,
	}
}

// NewDestiny2GetItemParamsWithHTTPClient creates a new Destiny2GetItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDestiny2GetItemParamsWithHTTPClient(client *http.Client) *Destiny2GetItemParams {
	var ()
	return &Destiny2GetItemParams{
		HTTPClient: client,
	}
}

/*Destiny2GetItemParams contains all the parameters to send to the API endpoint
for the destiny2 get item operation typically these are written to a http.Request
*/
type Destiny2GetItemParams struct {

	/*Components
	  A comma separated list of components to return (as strings or numeric values). See the DestinyComponentType enum for valid components to request. You must request at least one component to receive results.

	*/
	Components []int64
	/*DestinyMembershipID
	  The membership ID of the destiny profile.

	*/
	DestinyMembershipID int64
	/*ItemInstanceID
	  The Instance ID of the destiny item.

	*/
	ItemInstanceID int64
	/*MembershipType
	  A valid non-BungieNet membership type.

	*/
	MembershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the destiny2 get item params
func (o *Destiny2GetItemParams) WithTimeout(timeout time.Duration) *Destiny2GetItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the destiny2 get item params
func (o *Destiny2GetItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the destiny2 get item params
func (o *Destiny2GetItemParams) WithContext(ctx context.Context) *Destiny2GetItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the destiny2 get item params
func (o *Destiny2GetItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the destiny2 get item params
func (o *Destiny2GetItemParams) WithHTTPClient(client *http.Client) *Destiny2GetItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the destiny2 get item params
func (o *Destiny2GetItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComponents adds the components to the destiny2 get item params
func (o *Destiny2GetItemParams) WithComponents(components []int64) *Destiny2GetItemParams {
	o.SetComponents(components)
	return o
}

// SetComponents adds the components to the destiny2 get item params
func (o *Destiny2GetItemParams) SetComponents(components []int64) {
	o.Components = components
}

// WithDestinyMembershipID adds the destinyMembershipID to the destiny2 get item params
func (o *Destiny2GetItemParams) WithDestinyMembershipID(destinyMembershipID int64) *Destiny2GetItemParams {
	o.SetDestinyMembershipID(destinyMembershipID)
	return o
}

// SetDestinyMembershipID adds the destinyMembershipId to the destiny2 get item params
func (o *Destiny2GetItemParams) SetDestinyMembershipID(destinyMembershipID int64) {
	o.DestinyMembershipID = destinyMembershipID
}

// WithItemInstanceID adds the itemInstanceID to the destiny2 get item params
func (o *Destiny2GetItemParams) WithItemInstanceID(itemInstanceID int64) *Destiny2GetItemParams {
	o.SetItemInstanceID(itemInstanceID)
	return o
}

// SetItemInstanceID adds the itemInstanceId to the destiny2 get item params
func (o *Destiny2GetItemParams) SetItemInstanceID(itemInstanceID int64) {
	o.ItemInstanceID = itemInstanceID
}

// WithMembershipType adds the membershipType to the destiny2 get item params
func (o *Destiny2GetItemParams) WithMembershipType(membershipType int32) *Destiny2GetItemParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the destiny2 get item params
func (o *Destiny2GetItemParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WriteToRequest writes these params to a swagger request
func (o *Destiny2GetItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	var valuesComponents []string
	for _, v := range o.Components {
		valuesComponents = append(valuesComponents, swag.FormatInt64(v))
	}

	joinedComponents := swag.JoinByFormat(valuesComponents, "csv")
	// query array param components
	if err := r.SetQueryParam("components", joinedComponents...); err != nil {
		return err
	}

	// path param destinyMembershipId
	if err := r.SetPathParam("destinyMembershipId", swag.FormatInt64(o.DestinyMembershipID)); err != nil {
		return err
	}

	// path param itemInstanceId
	if err := r.SetPathParam("itemInstanceId", swag.FormatInt64(o.ItemInstanceID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
