// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDestiny2GetDestinyAggregateActivityStatsParams creates a new Destiny2GetDestinyAggregateActivityStatsParams object
// with the default values initialized.
func NewDestiny2GetDestinyAggregateActivityStatsParams() *Destiny2GetDestinyAggregateActivityStatsParams {
	var ()
	return &Destiny2GetDestinyAggregateActivityStatsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDestiny2GetDestinyAggregateActivityStatsParamsWithTimeout creates a new Destiny2GetDestinyAggregateActivityStatsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDestiny2GetDestinyAggregateActivityStatsParamsWithTimeout(timeout time.Duration) *Destiny2GetDestinyAggregateActivityStatsParams {
	var ()
	return &Destiny2GetDestinyAggregateActivityStatsParams{

		timeout: timeout,
	}
}

// NewDestiny2GetDestinyAggregateActivityStatsParamsWithContext creates a new Destiny2GetDestinyAggregateActivityStatsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDestiny2GetDestinyAggregateActivityStatsParamsWithContext(ctx context.Context) *Destiny2GetDestinyAggregateActivityStatsParams {
	var ()
	return &Destiny2GetDestinyAggregateActivityStatsParams{

		Context: ctx,
	}
}

// NewDestiny2GetDestinyAggregateActivityStatsParamsWithHTTPClient creates a new Destiny2GetDestinyAggregateActivityStatsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDestiny2GetDestinyAggregateActivityStatsParamsWithHTTPClient(client *http.Client) *Destiny2GetDestinyAggregateActivityStatsParams {
	var ()
	return &Destiny2GetDestinyAggregateActivityStatsParams{
		HTTPClient: client,
	}
}

/*Destiny2GetDestinyAggregateActivityStatsParams contains all the parameters to send to the API endpoint
for the destiny2 get destiny aggregate activity stats operation typically these are written to a http.Request
*/
type Destiny2GetDestinyAggregateActivityStatsParams struct {

	/*CharacterID
	  The specific character whose activities should be returned.

	*/
	CharacterID int64
	/*DestinyMembershipID
	  The Destiny membershipId of the user to retrieve.

	*/
	DestinyMembershipID int64
	/*MembershipType
	  A valid non-BungieNet membership type.

	*/
	MembershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithTimeout(timeout time.Duration) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithContext(ctx context.Context) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithHTTPClient(client *http.Client) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCharacterID adds the characterID to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithCharacterID(characterID int64) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetCharacterID(characterID)
	return o
}

// SetCharacterID adds the characterId to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetCharacterID(characterID int64) {
	o.CharacterID = characterID
}

// WithDestinyMembershipID adds the destinyMembershipID to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithDestinyMembershipID(destinyMembershipID int64) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetDestinyMembershipID(destinyMembershipID)
	return o
}

// SetDestinyMembershipID adds the destinyMembershipId to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetDestinyMembershipID(destinyMembershipID int64) {
	o.DestinyMembershipID = destinyMembershipID
}

// WithMembershipType adds the membershipType to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WithMembershipType(membershipType int32) *Destiny2GetDestinyAggregateActivityStatsParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the destiny2 get destiny aggregate activity stats params
func (o *Destiny2GetDestinyAggregateActivityStatsParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WriteToRequest writes these params to a swagger request
func (o *Destiny2GetDestinyAggregateActivityStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param characterId
	if err := r.SetPathParam("characterId", swag.FormatInt64(o.CharacterID)); err != nil {
		return err
	}

	// path param destinyMembershipId
	if err := r.SetPathParam("destinyMembershipId", swag.FormatInt64(o.DestinyMembershipID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
