// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDestiny2GetActivityHistoryParams creates a new Destiny2GetActivityHistoryParams object
// with the default values initialized.
func NewDestiny2GetActivityHistoryParams() *Destiny2GetActivityHistoryParams {
	var ()
	return &Destiny2GetActivityHistoryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDestiny2GetActivityHistoryParamsWithTimeout creates a new Destiny2GetActivityHistoryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDestiny2GetActivityHistoryParamsWithTimeout(timeout time.Duration) *Destiny2GetActivityHistoryParams {
	var ()
	return &Destiny2GetActivityHistoryParams{

		timeout: timeout,
	}
}

// NewDestiny2GetActivityHistoryParamsWithContext creates a new Destiny2GetActivityHistoryParams object
// with the default values initialized, and the ability to set a context for a request
func NewDestiny2GetActivityHistoryParamsWithContext(ctx context.Context) *Destiny2GetActivityHistoryParams {
	var ()
	return &Destiny2GetActivityHistoryParams{

		Context: ctx,
	}
}

// NewDestiny2GetActivityHistoryParamsWithHTTPClient creates a new Destiny2GetActivityHistoryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDestiny2GetActivityHistoryParamsWithHTTPClient(client *http.Client) *Destiny2GetActivityHistoryParams {
	var ()
	return &Destiny2GetActivityHistoryParams{
		HTTPClient: client,
	}
}

/*Destiny2GetActivityHistoryParams contains all the parameters to send to the API endpoint
for the destiny2 get activity history operation typically these are written to a http.Request
*/
type Destiny2GetActivityHistoryParams struct {

	/*CharacterID
	  The id of the character to retrieve.

	*/
	CharacterID int64
	/*Count
	  Number of rows to return

	*/
	Count *int32
	/*DestinyMembershipID
	  The Destiny membershipId of the user to retrieve.

	*/
	DestinyMembershipID int64
	/*MembershipType
	  A valid non-BungieNet membership type.

	*/
	MembershipType int32
	/*Mode
	  A filter for the activity mode to be returned. None returns all activities. See the documentation for DestinyActivityModeType for valid values, and pass in string representation.

	*/
	Mode *int32
	/*Page
	  Page number to return, starting with 0.

	*/
	Page *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithTimeout(timeout time.Duration) *Destiny2GetActivityHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithContext(ctx context.Context) *Destiny2GetActivityHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithHTTPClient(client *http.Client) *Destiny2GetActivityHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCharacterID adds the characterID to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithCharacterID(characterID int64) *Destiny2GetActivityHistoryParams {
	o.SetCharacterID(characterID)
	return o
}

// SetCharacterID adds the characterId to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetCharacterID(characterID int64) {
	o.CharacterID = characterID
}

// WithCount adds the count to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithCount(count *int32) *Destiny2GetActivityHistoryParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetCount(count *int32) {
	o.Count = count
}

// WithDestinyMembershipID adds the destinyMembershipID to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithDestinyMembershipID(destinyMembershipID int64) *Destiny2GetActivityHistoryParams {
	o.SetDestinyMembershipID(destinyMembershipID)
	return o
}

// SetDestinyMembershipID adds the destinyMembershipId to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetDestinyMembershipID(destinyMembershipID int64) {
	o.DestinyMembershipID = destinyMembershipID
}

// WithMembershipType adds the membershipType to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithMembershipType(membershipType int32) *Destiny2GetActivityHistoryParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WithMode adds the mode to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithMode(mode *int32) *Destiny2GetActivityHistoryParams {
	o.SetMode(mode)
	return o
}

// SetMode adds the mode to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetMode(mode *int32) {
	o.Mode = mode
}

// WithPage adds the page to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) WithPage(page *int32) *Destiny2GetActivityHistoryParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the destiny2 get activity history params
func (o *Destiny2GetActivityHistoryParams) SetPage(page *int32) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *Destiny2GetActivityHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param characterId
	if err := r.SetPathParam("characterId", swag.FormatInt64(o.CharacterID)); err != nil {
		return err
	}

	if o.Count != nil {

		// query param count
		var qrCount int32
		if o.Count != nil {
			qrCount = *o.Count
		}
		qCount := swag.FormatInt32(qrCount)
		if qCount != "" {
			if err := r.SetQueryParam("count", qCount); err != nil {
				return err
			}
		}

	}

	// path param destinyMembershipId
	if err := r.SetPathParam("destinyMembershipId", swag.FormatInt64(o.DestinyMembershipID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if o.Mode != nil {

		// query param mode
		var qrMode int32
		if o.Mode != nil {
			qrMode = *o.Mode
		}
		qMode := swag.FormatInt32(qrMode)
		if qMode != "" {
			if err := r.SetQueryParam("mode", qMode); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
