// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDestiny2GetVendorsParams creates a new Destiny2GetVendorsParams object
// with the default values initialized.
func NewDestiny2GetVendorsParams() *Destiny2GetVendorsParams {
	var ()
	return &Destiny2GetVendorsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDestiny2GetVendorsParamsWithTimeout creates a new Destiny2GetVendorsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDestiny2GetVendorsParamsWithTimeout(timeout time.Duration) *Destiny2GetVendorsParams {
	var ()
	return &Destiny2GetVendorsParams{

		timeout: timeout,
	}
}

// NewDestiny2GetVendorsParamsWithContext creates a new Destiny2GetVendorsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDestiny2GetVendorsParamsWithContext(ctx context.Context) *Destiny2GetVendorsParams {
	var ()
	return &Destiny2GetVendorsParams{

		Context: ctx,
	}
}

// NewDestiny2GetVendorsParamsWithHTTPClient creates a new Destiny2GetVendorsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDestiny2GetVendorsParamsWithHTTPClient(client *http.Client) *Destiny2GetVendorsParams {
	var ()
	return &Destiny2GetVendorsParams{
		HTTPClient: client,
	}
}

/*Destiny2GetVendorsParams contains all the parameters to send to the API endpoint
for the destiny2 get vendors operation typically these are written to a http.Request
*/
type Destiny2GetVendorsParams struct {

	/*CharacterID
	  The Destiny Character ID of the character for whom we're getting vendor info.

	*/
	CharacterID int64
	/*Components
	  A comma separated list of components to return (as strings or numeric values). See the DestinyComponentType enum for valid components to request. You must request at least one component to receive results.

	*/
	Components []int64
	/*DestinyMembershipID
	  Destiny membership ID of another user. You may be denied.

	*/
	DestinyMembershipID int64
	/*MembershipType
	  A valid non-BungieNet membership type.

	*/
	MembershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithTimeout(timeout time.Duration) *Destiny2GetVendorsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithContext(ctx context.Context) *Destiny2GetVendorsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithHTTPClient(client *http.Client) *Destiny2GetVendorsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCharacterID adds the characterID to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithCharacterID(characterID int64) *Destiny2GetVendorsParams {
	o.SetCharacterID(characterID)
	return o
}

// SetCharacterID adds the characterId to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetCharacterID(characterID int64) {
	o.CharacterID = characterID
}

// WithComponents adds the components to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithComponents(components []int64) *Destiny2GetVendorsParams {
	o.SetComponents(components)
	return o
}

// SetComponents adds the components to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetComponents(components []int64) {
	o.Components = components
}

// WithDestinyMembershipID adds the destinyMembershipID to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithDestinyMembershipID(destinyMembershipID int64) *Destiny2GetVendorsParams {
	o.SetDestinyMembershipID(destinyMembershipID)
	return o
}

// SetDestinyMembershipID adds the destinyMembershipId to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetDestinyMembershipID(destinyMembershipID int64) {
	o.DestinyMembershipID = destinyMembershipID
}

// WithMembershipType adds the membershipType to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) WithMembershipType(membershipType int32) *Destiny2GetVendorsParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the destiny2 get vendors params
func (o *Destiny2GetVendorsParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WriteToRequest writes these params to a swagger request
func (o *Destiny2GetVendorsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param characterId
	if err := r.SetPathParam("characterId", swag.FormatInt64(o.CharacterID)); err != nil {
		return err
	}

	var valuesComponents []string
	for _, v := range o.Components {
		valuesComponents = append(valuesComponents, swag.FormatInt64(v))
	}

	joinedComponents := swag.JoinByFormat(valuesComponents, "csv")
	// query array param components
	if err := r.SetQueryParam("components", joinedComponents...); err != nil {
		return err
	}

	// path param destinyMembershipId
	if err := r.SetPathParam("destinyMembershipId", swag.FormatInt64(o.DestinyMembershipID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
