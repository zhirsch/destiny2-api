// Code generated by go-swagger; DO NOT EDIT.

package community_content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCommunityContentGetFeaturedCommunityLiveStatusesParams creates a new CommunityContentGetFeaturedCommunityLiveStatusesParams object
// with the default values initialized.
func NewCommunityContentGetFeaturedCommunityLiveStatusesParams() *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	var ()
	return &CommunityContentGetFeaturedCommunityLiveStatusesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithTimeout creates a new CommunityContentGetFeaturedCommunityLiveStatusesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithTimeout(timeout time.Duration) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	var ()
	return &CommunityContentGetFeaturedCommunityLiveStatusesParams{

		timeout: timeout,
	}
}

// NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithContext creates a new CommunityContentGetFeaturedCommunityLiveStatusesParams object
// with the default values initialized, and the ability to set a context for a request
func NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithContext(ctx context.Context) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	var ()
	return &CommunityContentGetFeaturedCommunityLiveStatusesParams{

		Context: ctx,
	}
}

// NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithHTTPClient creates a new CommunityContentGetFeaturedCommunityLiveStatusesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCommunityContentGetFeaturedCommunityLiveStatusesParamsWithHTTPClient(client *http.Client) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	var ()
	return &CommunityContentGetFeaturedCommunityLiveStatusesParams{
		HTTPClient: client,
	}
}

/*CommunityContentGetFeaturedCommunityLiveStatusesParams contains all the parameters to send to the API endpoint
for the community content get featured community live statuses operation typically these are written to a http.Request
*/
type CommunityContentGetFeaturedCommunityLiveStatusesParams struct {

	/*Page
	  Zero based page.

	*/
	Page int32
	/*PartnershipType
	  The type of partnership for which the status should be returned.

	*/
	PartnershipType int32
	/*Sort
	  The sort mode.

	*/
	Sort int32
	/*StreamLocale
	  The locale for streams you'd like to see. Don't pass this to fall back on your BNet locale. Pass 'ALL' to not filter by locale.

	*/
	StreamLocale *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithTimeout(timeout time.Duration) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithContext(ctx context.Context) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithHTTPClient(client *http.Client) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithPage(page int32) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetPage(page int32) {
	o.Page = page
}

// WithPartnershipType adds the partnershipType to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithPartnershipType(partnershipType int32) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetPartnershipType(partnershipType)
	return o
}

// SetPartnershipType adds the partnershipType to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetPartnershipType(partnershipType int32) {
	o.PartnershipType = partnershipType
}

// WithSort adds the sort to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithSort(sort int32) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetSort(sort int32) {
	o.Sort = sort
}

// WithStreamLocale adds the streamLocale to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WithStreamLocale(streamLocale *string) *CommunityContentGetFeaturedCommunityLiveStatusesParams {
	o.SetStreamLocale(streamLocale)
	return o
}

// SetStreamLocale adds the streamLocale to the community content get featured community live statuses params
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) SetStreamLocale(streamLocale *string) {
	o.StreamLocale = streamLocale
}

// WriteToRequest writes these params to a swagger request
func (o *CommunityContentGetFeaturedCommunityLiveStatusesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param page
	if err := r.SetPathParam("page", swag.FormatInt32(o.Page)); err != nil {
		return err
	}

	// path param partnershipType
	if err := r.SetPathParam("partnershipType", swag.FormatInt32(o.PartnershipType)); err != nil {
		return err
	}

	// path param sort
	if err := r.SetPathParam("sort", swag.FormatInt32(o.Sort)); err != nil {
		return err
	}

	if o.StreamLocale != nil {

		// query param streamLocale
		var qrStreamLocale string
		if o.StreamLocale != nil {
			qrStreamLocale = *o.StreamLocale
		}
		qStreamLocale := qrStreamLocale
		if qStreamLocale != "" {
			if err := r.SetQueryParam("streamLocale", qStreamLocale); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
