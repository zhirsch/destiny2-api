// Code generated by go-swagger; DO NOT EDIT.

package community_content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCommunityContentGetStreamingStatusForMemberParams creates a new CommunityContentGetStreamingStatusForMemberParams object
// with the default values initialized.
func NewCommunityContentGetStreamingStatusForMemberParams() *CommunityContentGetStreamingStatusForMemberParams {
	var ()
	return &CommunityContentGetStreamingStatusForMemberParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCommunityContentGetStreamingStatusForMemberParamsWithTimeout creates a new CommunityContentGetStreamingStatusForMemberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCommunityContentGetStreamingStatusForMemberParamsWithTimeout(timeout time.Duration) *CommunityContentGetStreamingStatusForMemberParams {
	var ()
	return &CommunityContentGetStreamingStatusForMemberParams{

		timeout: timeout,
	}
}

// NewCommunityContentGetStreamingStatusForMemberParamsWithContext creates a new CommunityContentGetStreamingStatusForMemberParams object
// with the default values initialized, and the ability to set a context for a request
func NewCommunityContentGetStreamingStatusForMemberParamsWithContext(ctx context.Context) *CommunityContentGetStreamingStatusForMemberParams {
	var ()
	return &CommunityContentGetStreamingStatusForMemberParams{

		Context: ctx,
	}
}

// NewCommunityContentGetStreamingStatusForMemberParamsWithHTTPClient creates a new CommunityContentGetStreamingStatusForMemberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCommunityContentGetStreamingStatusForMemberParamsWithHTTPClient(client *http.Client) *CommunityContentGetStreamingStatusForMemberParams {
	var ()
	return &CommunityContentGetStreamingStatusForMemberParams{
		HTTPClient: client,
	}
}

/*CommunityContentGetStreamingStatusForMemberParams contains all the parameters to send to the API endpoint
for the community content get streaming status for member operation typically these are written to a http.Request
*/
type CommunityContentGetStreamingStatusForMemberParams struct {

	/*MembershipID
	  The membershipId related to that type.

	*/
	MembershipID int64
	/*MembershipType
	  The type of account for which info will be extracted.

	*/
	MembershipType int32
	/*PartnershipType
	  The type of partnership for which info will be extracted.

	*/
	PartnershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithTimeout(timeout time.Duration) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithContext(ctx context.Context) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithHTTPClient(client *http.Client) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMembershipID adds the membershipID to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithMembershipID(membershipID int64) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetMembershipID(membershipID)
	return o
}

// SetMembershipID adds the membershipId to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetMembershipID(membershipID int64) {
	o.MembershipID = membershipID
}

// WithMembershipType adds the membershipType to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithMembershipType(membershipType int32) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WithPartnershipType adds the partnershipType to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) WithPartnershipType(partnershipType int32) *CommunityContentGetStreamingStatusForMemberParams {
	o.SetPartnershipType(partnershipType)
	return o
}

// SetPartnershipType adds the partnershipType to the community content get streaming status for member params
func (o *CommunityContentGetStreamingStatusForMemberParams) SetPartnershipType(partnershipType int32) {
	o.PartnershipType = partnershipType
}

// WriteToRequest writes these params to a swagger request
func (o *CommunityContentGetStreamingStatusForMemberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param membershipId
	if err := r.SetPathParam("membershipId", swag.FormatInt64(o.MembershipID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	// path param partnershipType
	if err := r.SetPathParam("partnershipType", swag.FormatInt32(o.PartnershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
