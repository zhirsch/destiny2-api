// Code generated by go-swagger; DO NOT EDIT.

package group_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGroupV2SetUserClanInviteSettingParams creates a new GroupV2SetUserClanInviteSettingParams object
// with the default values initialized.
func NewGroupV2SetUserClanInviteSettingParams() *GroupV2SetUserClanInviteSettingParams {
	var ()
	return &GroupV2SetUserClanInviteSettingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGroupV2SetUserClanInviteSettingParamsWithTimeout creates a new GroupV2SetUserClanInviteSettingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGroupV2SetUserClanInviteSettingParamsWithTimeout(timeout time.Duration) *GroupV2SetUserClanInviteSettingParams {
	var ()
	return &GroupV2SetUserClanInviteSettingParams{

		timeout: timeout,
	}
}

// NewGroupV2SetUserClanInviteSettingParamsWithContext creates a new GroupV2SetUserClanInviteSettingParams object
// with the default values initialized, and the ability to set a context for a request
func NewGroupV2SetUserClanInviteSettingParamsWithContext(ctx context.Context) *GroupV2SetUserClanInviteSettingParams {
	var ()
	return &GroupV2SetUserClanInviteSettingParams{

		Context: ctx,
	}
}

// NewGroupV2SetUserClanInviteSettingParamsWithHTTPClient creates a new GroupV2SetUserClanInviteSettingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGroupV2SetUserClanInviteSettingParamsWithHTTPClient(client *http.Client) *GroupV2SetUserClanInviteSettingParams {
	var ()
	return &GroupV2SetUserClanInviteSettingParams{
		HTTPClient: client,
	}
}

/*GroupV2SetUserClanInviteSettingParams contains all the parameters to send to the API endpoint
for the group v2 set user clan invite setting operation typically these are written to a http.Request
*/
type GroupV2SetUserClanInviteSettingParams struct {

	/*AllowInvites
	  True to allow invites of this user to clans, false otherwise.

	*/
	AllowInvites bool
	/*MType
	  The Destiny membership type of linked account we are manipulating.

	*/
	MType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) WithTimeout(timeout time.Duration) *GroupV2SetUserClanInviteSettingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) WithContext(ctx context.Context) *GroupV2SetUserClanInviteSettingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) WithHTTPClient(client *http.Client) *GroupV2SetUserClanInviteSettingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowInvites adds the allowInvites to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) WithAllowInvites(allowInvites bool) *GroupV2SetUserClanInviteSettingParams {
	o.SetAllowInvites(allowInvites)
	return o
}

// SetAllowInvites adds the allowInvites to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) SetAllowInvites(allowInvites bool) {
	o.AllowInvites = allowInvites
}

// WithMType adds the mType to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) WithMType(mType int32) *GroupV2SetUserClanInviteSettingParams {
	o.SetMType(mType)
	return o
}

// SetMType adds the mType to the group v2 set user clan invite setting params
func (o *GroupV2SetUserClanInviteSettingParams) SetMType(mType int32) {
	o.MType = mType
}

// WriteToRequest writes these params to a swagger request
func (o *GroupV2SetUserClanInviteSettingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param allowInvites
	if err := r.SetPathParam("allowInvites", swag.FormatBool(o.AllowInvites)); err != nil {
		return err
	}

	// path param mType
	if err := r.SetPathParam("mType", swag.FormatInt32(o.MType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
