// Code generated by go-swagger; DO NOT EDIT.

package group_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGroupV2AbdicateFoundershipParams creates a new GroupV2AbdicateFoundershipParams object
// with the default values initialized.
func NewGroupV2AbdicateFoundershipParams() *GroupV2AbdicateFoundershipParams {
	var ()
	return &GroupV2AbdicateFoundershipParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGroupV2AbdicateFoundershipParamsWithTimeout creates a new GroupV2AbdicateFoundershipParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGroupV2AbdicateFoundershipParamsWithTimeout(timeout time.Duration) *GroupV2AbdicateFoundershipParams {
	var ()
	return &GroupV2AbdicateFoundershipParams{

		timeout: timeout,
	}
}

// NewGroupV2AbdicateFoundershipParamsWithContext creates a new GroupV2AbdicateFoundershipParams object
// with the default values initialized, and the ability to set a context for a request
func NewGroupV2AbdicateFoundershipParamsWithContext(ctx context.Context) *GroupV2AbdicateFoundershipParams {
	var ()
	return &GroupV2AbdicateFoundershipParams{

		Context: ctx,
	}
}

// NewGroupV2AbdicateFoundershipParamsWithHTTPClient creates a new GroupV2AbdicateFoundershipParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGroupV2AbdicateFoundershipParamsWithHTTPClient(client *http.Client) *GroupV2AbdicateFoundershipParams {
	var ()
	return &GroupV2AbdicateFoundershipParams{
		HTTPClient: client,
	}
}

/*GroupV2AbdicateFoundershipParams contains all the parameters to send to the API endpoint
for the group v2 abdicate foundership operation typically these are written to a http.Request
*/
type GroupV2AbdicateFoundershipParams struct {

	/*FounderIDNew
	  The new founder for this group. Must already be a group admin.

	*/
	FounderIDNew int64
	/*GroupID
	  The target group id.

	*/
	GroupID int64
	/*MembershipType
	  Membership type of the provided founderIdNew.

	*/
	MembershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithTimeout(timeout time.Duration) *GroupV2AbdicateFoundershipParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithContext(ctx context.Context) *GroupV2AbdicateFoundershipParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithHTTPClient(client *http.Client) *GroupV2AbdicateFoundershipParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFounderIDNew adds the founderIDNew to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithFounderIDNew(founderIDNew int64) *GroupV2AbdicateFoundershipParams {
	o.SetFounderIDNew(founderIDNew)
	return o
}

// SetFounderIDNew adds the founderIdNew to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetFounderIDNew(founderIDNew int64) {
	o.FounderIDNew = founderIDNew
}

// WithGroupID adds the groupID to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithGroupID(groupID int64) *GroupV2AbdicateFoundershipParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetGroupID(groupID int64) {
	o.GroupID = groupID
}

// WithMembershipType adds the membershipType to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) WithMembershipType(membershipType int32) *GroupV2AbdicateFoundershipParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the group v2 abdicate foundership params
func (o *GroupV2AbdicateFoundershipParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WriteToRequest writes these params to a swagger request
func (o *GroupV2AbdicateFoundershipParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param founderIdNew
	if err := r.SetPathParam("founderIdNew", swag.FormatInt64(o.FounderIDNew)); err != nil {
		return err
	}

	// path param groupId
	if err := r.SetPathParam("groupId", swag.FormatInt64(o.GroupID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
