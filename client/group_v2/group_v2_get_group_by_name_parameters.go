// Code generated by go-swagger; DO NOT EDIT.

package group_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGroupV2GetGroupByNameParams creates a new GroupV2GetGroupByNameParams object
// with the default values initialized.
func NewGroupV2GetGroupByNameParams() *GroupV2GetGroupByNameParams {
	var ()
	return &GroupV2GetGroupByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGroupV2GetGroupByNameParamsWithTimeout creates a new GroupV2GetGroupByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGroupV2GetGroupByNameParamsWithTimeout(timeout time.Duration) *GroupV2GetGroupByNameParams {
	var ()
	return &GroupV2GetGroupByNameParams{

		timeout: timeout,
	}
}

// NewGroupV2GetGroupByNameParamsWithContext creates a new GroupV2GetGroupByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGroupV2GetGroupByNameParamsWithContext(ctx context.Context) *GroupV2GetGroupByNameParams {
	var ()
	return &GroupV2GetGroupByNameParams{

		Context: ctx,
	}
}

// NewGroupV2GetGroupByNameParamsWithHTTPClient creates a new GroupV2GetGroupByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGroupV2GetGroupByNameParamsWithHTTPClient(client *http.Client) *GroupV2GetGroupByNameParams {
	var ()
	return &GroupV2GetGroupByNameParams{
		HTTPClient: client,
	}
}

/*GroupV2GetGroupByNameParams contains all the parameters to send to the API endpoint
for the group v2 get group by name operation typically these are written to a http.Request
*/
type GroupV2GetGroupByNameParams struct {

	/*GroupName
	  Exact name of the group to find.

	*/
	GroupName string
	/*GroupType
	  Type of group to find.

	*/
	GroupType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) WithTimeout(timeout time.Duration) *GroupV2GetGroupByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) WithContext(ctx context.Context) *GroupV2GetGroupByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) WithHTTPClient(client *http.Client) *GroupV2GetGroupByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupName adds the groupName to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) WithGroupName(groupName string) *GroupV2GetGroupByNameParams {
	o.SetGroupName(groupName)
	return o
}

// SetGroupName adds the groupName to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) SetGroupName(groupName string) {
	o.GroupName = groupName
}

// WithGroupType adds the groupType to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) WithGroupType(groupType int32) *GroupV2GetGroupByNameParams {
	o.SetGroupType(groupType)
	return o
}

// SetGroupType adds the groupType to the group v2 get group by name params
func (o *GroupV2GetGroupByNameParams) SetGroupType(groupType int32) {
	o.GroupType = groupType
}

// WriteToRequest writes these params to a swagger request
func (o *GroupV2GetGroupByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param groupName
	if err := r.SetPathParam("groupName", o.GroupName); err != nil {
		return err
	}

	// path param groupType
	if err := r.SetPathParam("groupType", swag.FormatInt32(o.GroupType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
