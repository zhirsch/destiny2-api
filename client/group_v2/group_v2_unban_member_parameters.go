// Code generated by go-swagger; DO NOT EDIT.

package group_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGroupV2UnbanMemberParams creates a new GroupV2UnbanMemberParams object
// with the default values initialized.
func NewGroupV2UnbanMemberParams() *GroupV2UnbanMemberParams {
	var ()
	return &GroupV2UnbanMemberParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGroupV2UnbanMemberParamsWithTimeout creates a new GroupV2UnbanMemberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGroupV2UnbanMemberParamsWithTimeout(timeout time.Duration) *GroupV2UnbanMemberParams {
	var ()
	return &GroupV2UnbanMemberParams{

		timeout: timeout,
	}
}

// NewGroupV2UnbanMemberParamsWithContext creates a new GroupV2UnbanMemberParams object
// with the default values initialized, and the ability to set a context for a request
func NewGroupV2UnbanMemberParamsWithContext(ctx context.Context) *GroupV2UnbanMemberParams {
	var ()
	return &GroupV2UnbanMemberParams{

		Context: ctx,
	}
}

// NewGroupV2UnbanMemberParamsWithHTTPClient creates a new GroupV2UnbanMemberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGroupV2UnbanMemberParamsWithHTTPClient(client *http.Client) *GroupV2UnbanMemberParams {
	var ()
	return &GroupV2UnbanMemberParams{
		HTTPClient: client,
	}
}

/*GroupV2UnbanMemberParams contains all the parameters to send to the API endpoint
for the group v2 unban member operation typically these are written to a http.Request
*/
type GroupV2UnbanMemberParams struct {

	/*GroupID*/
	GroupID int64
	/*MembershipID
	  Membership ID of the member to unban from the group

	*/
	MembershipID int64
	/*MembershipType
	  Membership type of the provided membership ID.

	*/
	MembershipType int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithTimeout(timeout time.Duration) *GroupV2UnbanMemberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithContext(ctx context.Context) *GroupV2UnbanMemberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithHTTPClient(client *http.Client) *GroupV2UnbanMemberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupID adds the groupID to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithGroupID(groupID int64) *GroupV2UnbanMemberParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetGroupID(groupID int64) {
	o.GroupID = groupID
}

// WithMembershipID adds the membershipID to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithMembershipID(membershipID int64) *GroupV2UnbanMemberParams {
	o.SetMembershipID(membershipID)
	return o
}

// SetMembershipID adds the membershipId to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetMembershipID(membershipID int64) {
	o.MembershipID = membershipID
}

// WithMembershipType adds the membershipType to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) WithMembershipType(membershipType int32) *GroupV2UnbanMemberParams {
	o.SetMembershipType(membershipType)
	return o
}

// SetMembershipType adds the membershipType to the group v2 unban member params
func (o *GroupV2UnbanMemberParams) SetMembershipType(membershipType int32) {
	o.MembershipType = membershipType
}

// WriteToRequest writes these params to a swagger request
func (o *GroupV2UnbanMemberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param groupId
	if err := r.SetPathParam("groupId", swag.FormatInt64(o.GroupID)); err != nil {
		return err
	}

	// path param membershipId
	if err := r.SetPathParam("membershipId", swag.FormatInt64(o.MembershipID)); err != nil {
		return err
	}

	// path param membershipType
	if err := r.SetPathParam("membershipType", swag.FormatInt32(o.MembershipType)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
